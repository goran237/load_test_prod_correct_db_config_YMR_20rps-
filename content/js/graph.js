/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1344.0, "minX": 0.0, "maxY": 60762.0, "series": [{"data": [[0.0, 1344.0], [0.1, 1344.0], [0.2, 1344.0], [0.3, 1344.0], [0.4, 1468.0], [0.5, 1468.0], [0.6, 1468.0], [0.7, 1468.0], [0.8, 1491.0], [0.9, 1491.0], [1.0, 1491.0], [1.1, 1491.0], [1.2, 1668.0], [1.3, 1668.0], [1.4, 1668.0], [1.5, 1668.0], [1.6, 1759.0], [1.7, 1759.0], [1.8, 1759.0], [1.9, 1759.0], [2.0, 1817.0], [2.1, 1817.0], [2.2, 1817.0], [2.3, 1817.0], [2.4, 1941.0], [2.5, 1941.0], [2.6, 1941.0], [2.7, 1941.0], [2.8, 1985.0], [2.9, 1985.0], [3.0, 1985.0], [3.1, 1985.0], [3.2, 2180.0], [3.3, 2180.0], [3.4, 2180.0], [3.5, 2180.0], [3.6, 2266.0], [3.7, 2266.0], [3.8, 2266.0], [3.9, 2266.0], [4.0, 2366.0], [4.1, 2366.0], [4.2, 2366.0], [4.3, 2366.0], [4.4, 2422.0], [4.5, 2422.0], [4.6, 2422.0], [4.7, 2422.0], [4.8, 2472.0], [4.9, 2472.0], [5.0, 2472.0], [5.1, 2472.0], [5.2, 2552.0], [5.3, 2552.0], [5.4, 2552.0], [5.5, 2552.0], [5.6, 2746.0], [5.7, 2746.0], [5.8, 2746.0], [5.9, 2746.0], [6.0, 2826.0], [6.1, 2826.0], [6.2, 2826.0], [6.3, 2826.0], [6.4, 2854.0], [6.5, 2854.0], [6.6, 2854.0], [6.7, 2854.0], [6.8, 2975.0], [6.9, 2975.0], [7.0, 2975.0], [7.1, 2975.0], [7.2, 3115.0], [7.3, 3115.0], [7.4, 3115.0], [7.5, 3115.0], [7.6, 3203.0], [7.7, 3203.0], [7.8, 3203.0], [7.9, 3203.0], [8.0, 3213.0], [8.1, 3213.0], [8.2, 3213.0], [8.3, 3213.0], [8.4, 3385.0], [8.5, 3385.0], [8.6, 3385.0], [8.7, 3425.0], [8.8, 3425.0], [8.9, 3425.0], [9.0, 3425.0], [9.1, 4727.0], [9.2, 4727.0], [9.3, 4727.0], [9.4, 4727.0], [9.5, 6114.0], [9.6, 6114.0], [9.7, 6114.0], [9.8, 6114.0], [9.9, 10001.0], [10.0, 10001.0], [10.1, 10001.0], [10.2, 10001.0], [10.3, 10223.0], [10.4, 10223.0], [10.5, 10223.0], [10.6, 10223.0], [10.7, 10275.0], [10.8, 10275.0], [10.9, 10275.0], [11.0, 10275.0], [11.1, 10505.0], [11.2, 10505.0], [11.3, 10505.0], [11.4, 10505.0], [11.5, 11000.0], [11.6, 11000.0], [11.7, 11000.0], [11.8, 11000.0], [11.9, 11599.0], [12.0, 11599.0], [12.1, 11599.0], [12.2, 11599.0], [12.3, 12197.0], [12.4, 12197.0], [12.5, 12197.0], [12.6, 12197.0], [12.7, 12376.0], [12.8, 12376.0], [12.9, 12376.0], [13.0, 12376.0], [13.1, 13228.0], [13.2, 13228.0], [13.3, 13228.0], [13.4, 13228.0], [13.5, 13505.0], [13.6, 13505.0], [13.7, 13505.0], [13.8, 13505.0], [13.9, 14553.0], [14.0, 14553.0], [14.1, 14553.0], [14.2, 14553.0], [14.3, 14835.0], [14.4, 14835.0], [14.5, 14835.0], [14.6, 14835.0], [14.7, 15133.0], [14.8, 15133.0], [14.9, 15133.0], [15.0, 15133.0], [15.1, 15936.0], [15.2, 15936.0], [15.3, 15936.0], [15.4, 15936.0], [15.5, 16016.0], [15.6, 16016.0], [15.7, 16016.0], [15.8, 16016.0], [15.9, 16920.0], [16.0, 16920.0], [16.1, 16920.0], [16.2, 16920.0], [16.3, 18204.0], [16.4, 18204.0], [16.5, 18204.0], [16.6, 18204.0], [16.7, 18261.0], [16.8, 18261.0], [16.9, 18261.0], [17.0, 18871.0], [17.1, 18871.0], [17.2, 18871.0], [17.3, 18871.0], [17.4, 19006.0], [17.5, 19006.0], [17.6, 19006.0], [17.7, 19006.0], [17.8, 19114.0], [17.9, 19114.0], [18.0, 19114.0], [18.1, 19114.0], [18.2, 19181.0], [18.3, 19181.0], [18.4, 19181.0], [18.5, 19181.0], [18.6, 19482.0], [18.7, 19482.0], [18.8, 19482.0], [18.9, 19482.0], [19.0, 19666.0], [19.1, 19666.0], [19.2, 19666.0], [19.3, 19666.0], [19.4, 20258.0], [19.5, 20258.0], [19.6, 20258.0], [19.7, 20258.0], [19.8, 21532.0], [19.9, 21532.0], [20.0, 21532.0], [20.1, 21532.0], [20.2, 23148.0], [20.3, 23148.0], [20.4, 23148.0], [20.5, 23148.0], [20.6, 24715.0], [20.7, 24715.0], [20.8, 24715.0], [20.9, 24715.0], [21.0, 25179.0], [21.1, 25179.0], [21.2, 25179.0], [21.3, 25179.0], [21.4, 25209.0], [21.5, 25209.0], [21.6, 25209.0], [21.7, 25209.0], [21.8, 25310.0], [21.9, 25310.0], [22.0, 25310.0], [22.1, 25310.0], [22.2, 25470.0], [22.3, 25470.0], [22.4, 25470.0], [22.5, 25470.0], [22.6, 26816.0], [22.7, 26816.0], [22.8, 26816.0], [22.9, 26816.0], [23.0, 27086.0], [23.1, 27086.0], [23.2, 27086.0], [23.3, 27086.0], [23.4, 27100.0], [23.5, 27100.0], [23.6, 27100.0], [23.7, 27100.0], [23.8, 27175.0], [23.9, 27175.0], [24.0, 27175.0], [24.1, 27175.0], [24.2, 27237.0], [24.3, 27237.0], [24.4, 27237.0], [24.5, 27237.0], [24.6, 27453.0], [24.7, 27453.0], [24.8, 27453.0], [24.9, 27453.0], [25.0, 27547.0], [25.1, 27547.0], [25.2, 27547.0], [25.3, 27794.0], [25.4, 27794.0], [25.5, 27794.0], [25.6, 27794.0], [25.7, 28029.0], [25.8, 28029.0], [25.9, 28029.0], [26.0, 28029.0], [26.1, 28474.0], [26.2, 28474.0], [26.3, 28474.0], [26.4, 28474.0], [26.5, 28830.0], [26.6, 28830.0], [26.7, 28830.0], [26.8, 28830.0], [26.9, 29071.0], [27.0, 29071.0], [27.1, 29071.0], [27.2, 29071.0], [27.3, 29331.0], [27.4, 29331.0], [27.5, 29331.0], [27.6, 29331.0], [27.7, 29882.0], [27.8, 29882.0], [27.9, 29882.0], [28.0, 29882.0], [28.1, 30646.0], [28.2, 30646.0], [28.3, 30646.0], [28.4, 30646.0], [28.5, 30663.0], [28.6, 30663.0], [28.7, 30663.0], [28.8, 30663.0], [28.9, 30858.0], [29.0, 30858.0], [29.1, 30858.0], [29.2, 30858.0], [29.3, 31262.0], [29.4, 31262.0], [29.5, 31262.0], [29.6, 31262.0], [29.7, 31617.0], [29.8, 31617.0], [29.9, 31617.0], [30.0, 31617.0], [30.1, 32466.0], [30.2, 32466.0], [30.3, 32466.0], [30.4, 32466.0], [30.5, 32677.0], [30.6, 32677.0], [30.7, 32677.0], [30.8, 32677.0], [30.9, 32997.0], [31.0, 32997.0], [31.1, 32997.0], [31.2, 32997.0], [31.3, 33104.0], [31.4, 33104.0], [31.5, 33104.0], [31.6, 33104.0], [31.7, 35019.0], [31.8, 35019.0], [31.9, 35019.0], [32.0, 35019.0], [32.1, 36087.0], [32.2, 36087.0], [32.3, 36087.0], [32.4, 36087.0], [32.5, 36368.0], [32.6, 36368.0], [32.7, 36368.0], [32.8, 36368.0], [32.9, 36997.0], [33.0, 36997.0], [33.1, 36997.0], [33.2, 36997.0], [33.3, 37077.0], [33.4, 37077.0], [33.5, 37077.0], [33.6, 37445.0], [33.7, 37445.0], [33.8, 37445.0], [33.9, 37445.0], [34.0, 37563.0], [34.1, 37563.0], [34.2, 37563.0], [34.3, 37563.0], [34.4, 38059.0], [34.5, 38059.0], [34.6, 38059.0], [34.7, 38059.0], [34.8, 38116.0], [34.9, 38116.0], [35.0, 38116.0], [35.1, 38116.0], [35.2, 38545.0], [35.3, 38545.0], [35.4, 38545.0], [35.5, 38545.0], [35.6, 42137.0], [35.7, 42137.0], [35.8, 42137.0], [35.9, 42137.0], [36.0, 42908.0], [36.1, 42908.0], [36.2, 42908.0], [36.3, 42908.0], [36.4, 43537.0], [36.5, 43537.0], [36.6, 43537.0], [36.7, 43537.0], [36.8, 44073.0], [36.9, 44073.0], [37.0, 44073.0], [37.1, 44073.0], [37.2, 44184.0], [37.3, 44184.0], [37.4, 44184.0], [37.5, 44184.0], [37.6, 44310.0], [37.7, 44310.0], [37.8, 44310.0], [37.9, 44310.0], [38.0, 44363.0], [38.1, 44363.0], [38.2, 44363.0], [38.3, 44363.0], [38.4, 44554.0], [38.5, 44554.0], [38.6, 44554.0], [38.7, 44554.0], [38.8, 44614.0], [38.9, 44614.0], [39.0, 44614.0], [39.1, 44614.0], [39.2, 44656.0], [39.3, 44656.0], [39.4, 44656.0], [39.5, 44656.0], [39.6, 44676.0], [39.7, 44676.0], [39.8, 44676.0], [39.9, 44676.0], [40.0, 45107.0], [40.1, 45107.0], [40.2, 45107.0], [40.3, 45107.0], [40.4, 45356.0], [40.5, 45356.0], [40.6, 45356.0], [40.7, 45356.0], [40.8, 45764.0], [40.9, 45764.0], [41.0, 45764.0], [41.1, 45764.0], [41.2, 45957.0], [41.3, 45957.0], [41.4, 45957.0], [41.5, 45957.0], [41.6, 46004.0], [41.7, 46004.0], [41.8, 46004.0], [41.9, 46350.0], [42.0, 46350.0], [42.1, 46350.0], [42.2, 46350.0], [42.3, 46802.0], [42.4, 46802.0], [42.5, 46802.0], [42.6, 46802.0], [42.7, 46833.0], [42.8, 46833.0], [42.9, 46833.0], [43.0, 46833.0], [43.1, 46995.0], [43.2, 46995.0], [43.3, 46995.0], [43.4, 46995.0], [43.5, 47239.0], [43.6, 47239.0], [43.7, 47239.0], [43.8, 47239.0], [43.9, 47527.0], [44.0, 47527.0], [44.1, 47527.0], [44.2, 47527.0], [44.3, 47716.0], [44.4, 47716.0], [44.5, 47716.0], [44.6, 47716.0], [44.7, 48228.0], [44.8, 48228.0], [44.9, 48228.0], [45.0, 48228.0], [45.1, 48439.0], [45.2, 48439.0], [45.3, 48439.0], [45.4, 48439.0], [45.5, 48526.0], [45.6, 48526.0], [45.7, 48526.0], [45.8, 48526.0], [45.9, 48648.0], [46.0, 48648.0], [46.1, 48648.0], [46.2, 48648.0], [46.3, 49670.0], [46.4, 49670.0], [46.5, 49670.0], [46.6, 49670.0], [46.7, 49786.0], [46.8, 49786.0], [46.9, 49786.0], [47.0, 49786.0], [47.1, 51190.0], [47.2, 51190.0], [47.3, 51190.0], [47.4, 51190.0], [47.5, 51468.0], [47.6, 51468.0], [47.7, 51468.0], [47.8, 51468.0], [47.9, 52027.0], [48.0, 52027.0], [48.1, 52027.0], [48.2, 52027.0], [48.3, 52542.0], [48.4, 52542.0], [48.5, 52542.0], [48.6, 52542.0], [48.7, 54185.0], [48.8, 54185.0], [48.9, 54185.0], [49.0, 54185.0], [49.1, 55940.0], [49.2, 55940.0], [49.3, 55940.0], [49.4, 55940.0], [49.5, 56099.0], [49.6, 56099.0], [49.7, 56099.0], [49.8, 56099.0], [49.9, 56822.0], [50.0, 56822.0], [50.1, 56822.0], [50.2, 57822.0], [50.3, 57822.0], [50.4, 57822.0], [50.5, 57822.0], [50.6, 58408.0], [50.7, 58408.0], [50.8, 58408.0], [50.9, 58408.0], [51.0, 58599.0], [51.1, 58599.0], [51.2, 58599.0], [51.3, 58599.0], [51.4, 58622.0], [51.5, 58622.0], [51.6, 58622.0], [51.7, 58622.0], [51.8, 58624.0], [51.9, 58624.0], [52.0, 58624.0], [52.1, 58624.0], [52.2, 58624.0], [52.3, 58624.0], [52.4, 58624.0], [52.5, 58624.0], [52.6, 58625.0], [52.7, 58625.0], [52.8, 58625.0], [52.9, 58625.0], [53.0, 58626.0], [53.1, 58626.0], [53.2, 58626.0], [53.3, 58626.0], [53.4, 58626.0], [53.5, 58626.0], [53.6, 58626.0], [53.7, 58626.0], [53.8, 58627.0], [53.9, 58627.0], [54.0, 58627.0], [54.1, 58627.0], [54.2, 58627.0], [54.3, 58627.0], [54.4, 58627.0], [54.5, 58627.0], [54.6, 58628.0], [54.7, 58628.0], [54.8, 58628.0], [54.9, 58628.0], [55.0, 58629.0], [55.1, 58629.0], [55.2, 58629.0], [55.3, 58629.0], [55.4, 58629.0], [55.5, 58629.0], [55.6, 58629.0], [55.7, 58629.0], [55.8, 58630.0], [55.9, 58630.0], [56.0, 58630.0], [56.1, 58630.0], [56.2, 58630.0], [56.3, 58630.0], [56.4, 58630.0], [56.5, 58630.0], [56.6, 58630.0], [56.7, 58630.0], [56.8, 58630.0], [56.9, 58630.0], [57.0, 58631.0], [57.1, 58631.0], [57.2, 58631.0], [57.3, 58631.0], [57.4, 58631.0], [57.5, 58631.0], [57.6, 58631.0], [57.7, 58631.0], [57.8, 58632.0], [57.9, 58632.0], [58.0, 58632.0], [58.1, 58632.0], [58.2, 58632.0], [58.3, 58632.0], [58.4, 58632.0], [58.5, 58633.0], [58.6, 58633.0], [58.7, 58633.0], [58.8, 58633.0], [58.9, 58634.0], [59.0, 58634.0], [59.1, 58634.0], [59.2, 58634.0], [59.3, 58634.0], [59.4, 58634.0], [59.5, 58634.0], [59.6, 58634.0], [59.7, 58634.0], [59.8, 58634.0], [59.9, 58634.0], [60.0, 58634.0], [60.1, 58635.0], [60.2, 58635.0], [60.3, 58635.0], [60.4, 58635.0], [60.5, 58635.0], [60.6, 58635.0], [60.7, 58635.0], [60.8, 58635.0], [60.9, 58635.0], [61.0, 58635.0], [61.1, 58635.0], [61.2, 58635.0], [61.3, 58635.0], [61.4, 58635.0], [61.5, 58635.0], [61.6, 58635.0], [61.7, 58636.0], [61.8, 58636.0], [61.9, 58636.0], [62.0, 58636.0], [62.1, 58637.0], [62.2, 58637.0], [62.3, 58637.0], [62.4, 58637.0], [62.5, 58637.0], [62.6, 58637.0], [62.7, 58637.0], [62.8, 58637.0], [62.9, 58638.0], [63.0, 58638.0], [63.1, 58638.0], [63.2, 58638.0], [63.3, 58639.0], [63.4, 58639.0], [63.5, 58639.0], [63.6, 58639.0], [63.7, 58639.0], [63.8, 58639.0], [63.9, 58639.0], [64.0, 58639.0], [64.1, 58640.0], [64.2, 58640.0], [64.3, 58640.0], [64.4, 58640.0], [64.5, 58640.0], [64.6, 58640.0], [64.7, 58640.0], [64.8, 58640.0], [64.9, 58640.0], [65.0, 58640.0], [65.1, 58640.0], [65.2, 58640.0], [65.3, 58640.0], [65.4, 58640.0], [65.5, 58640.0], [65.6, 58640.0], [65.7, 58641.0], [65.8, 58641.0], [65.9, 58641.0], [66.0, 58641.0], [66.1, 58641.0], [66.2, 58641.0], [66.3, 58641.0], [66.4, 58641.0], [66.5, 58641.0], [66.6, 58641.0], [66.7, 58641.0], [66.8, 58642.0], [66.9, 58642.0], [67.0, 58642.0], [67.1, 58642.0], [67.2, 58642.0], [67.3, 58642.0], [67.4, 58642.0], [67.5, 58642.0], [67.6, 58642.0], [67.7, 58642.0], [67.8, 58642.0], [67.9, 58642.0], [68.0, 58642.0], [68.1, 58642.0], [68.2, 58642.0], [68.3, 58642.0], [68.4, 58643.0], [68.5, 58643.0], [68.6, 58643.0], [68.7, 58643.0], [68.8, 58643.0], [68.9, 58643.0], [69.0, 58643.0], [69.1, 58643.0], [69.2, 58644.0], [69.3, 58644.0], [69.4, 58644.0], [69.5, 58644.0], [69.6, 58644.0], [69.7, 58644.0], [69.8, 58644.0], [69.9, 58644.0], [70.0, 58644.0], [70.1, 58644.0], [70.2, 58644.0], [70.3, 58644.0], [70.4, 58645.0], [70.5, 58645.0], [70.6, 58645.0], [70.7, 58645.0], [70.8, 58645.0], [70.9, 58645.0], [71.0, 58645.0], [71.1, 58645.0], [71.2, 58645.0], [71.3, 58645.0], [71.4, 58645.0], [71.5, 58645.0], [71.6, 58645.0], [71.7, 58645.0], [71.8, 58645.0], [71.9, 58645.0], [72.0, 58646.0], [72.1, 58646.0], [72.2, 58646.0], [72.3, 58646.0], [72.4, 58646.0], [72.5, 58646.0], [72.6, 58646.0], [72.7, 58646.0], [72.8, 58646.0], [72.9, 58646.0], [73.0, 58646.0], [73.1, 58646.0], [73.2, 58646.0], [73.3, 58646.0], [73.4, 58646.0], [73.5, 58646.0], [73.6, 58646.0], [73.7, 58646.0], [73.8, 58646.0], [73.9, 58646.0], [74.0, 58647.0], [74.1, 58647.0], [74.2, 58647.0], [74.3, 58647.0], [74.4, 58647.0], [74.5, 58647.0], [74.6, 58647.0], [74.7, 58647.0], [74.8, 58647.0], [74.9, 58647.0], [75.0, 58647.0], [75.1, 58648.0], [75.2, 58648.0], [75.3, 58648.0], [75.4, 58648.0], [75.5, 58648.0], [75.6, 58648.0], [75.7, 58648.0], [75.8, 58648.0], [75.9, 58648.0], [76.0, 58648.0], [76.1, 58648.0], [76.2, 58648.0], [76.3, 58649.0], [76.4, 58649.0], [76.5, 58649.0], [76.6, 58649.0], [76.7, 58650.0], [76.8, 58650.0], [76.9, 58650.0], [77.0, 58650.0], [77.1, 58650.0], [77.2, 58650.0], [77.3, 58650.0], [77.4, 58650.0], [77.5, 58650.0], [77.6, 58650.0], [77.7, 58650.0], [77.8, 58650.0], [77.9, 58651.0], [78.0, 58651.0], [78.1, 58651.0], [78.2, 58651.0], [78.3, 58651.0], [78.4, 58651.0], [78.5, 58651.0], [78.6, 58651.0], [78.7, 58651.0], [78.8, 58651.0], [78.9, 58651.0], [79.0, 58651.0], [79.1, 58652.0], [79.2, 58652.0], [79.3, 58652.0], [79.4, 58652.0], [79.5, 58652.0], [79.6, 58652.0], [79.7, 58652.0], [79.8, 58652.0], [79.9, 58652.0], [80.0, 58652.0], [80.1, 58652.0], [80.2, 58652.0], [80.3, 58653.0], [80.4, 58653.0], [80.5, 58653.0], [80.6, 58653.0], [80.7, 58653.0], [80.8, 58653.0], [80.9, 58653.0], [81.0, 58653.0], [81.1, 58654.0], [81.2, 58654.0], [81.3, 58654.0], [81.4, 58654.0], [81.5, 58654.0], [81.6, 58654.0], [81.7, 58654.0], [81.8, 58654.0], [81.9, 58654.0], [82.0, 58654.0], [82.1, 58654.0], [82.2, 58654.0], [82.3, 58655.0], [82.4, 58655.0], [82.5, 58655.0], [82.6, 58655.0], [82.7, 58655.0], [82.8, 58655.0], [82.9, 58655.0], [83.0, 58655.0], [83.1, 58656.0], [83.2, 58656.0], [83.3, 58656.0], [83.4, 58656.0], [83.5, 58656.0], [83.6, 58656.0], [83.7, 58656.0], [83.8, 58656.0], [83.9, 58656.0], [84.0, 58656.0], [84.1, 58656.0], [84.2, 58657.0], [84.3, 58657.0], [84.4, 58657.0], [84.5, 58657.0], [84.6, 58657.0], [84.7, 58657.0], [84.8, 58657.0], [84.9, 58657.0], [85.0, 58657.0], [85.1, 58657.0], [85.2, 58657.0], [85.3, 58657.0], [85.4, 58657.0], [85.5, 58657.0], [85.6, 58657.0], [85.7, 58657.0], [85.8, 58657.0], [85.9, 58657.0], [86.0, 58657.0], [86.1, 58657.0], [86.2, 58658.0], [86.3, 58658.0], [86.4, 58658.0], [86.5, 58658.0], [86.6, 58658.0], [86.7, 58658.0], [86.8, 58658.0], [86.9, 58658.0], [87.0, 58658.0], [87.1, 58658.0], [87.2, 58658.0], [87.3, 58658.0], [87.4, 58659.0], [87.5, 58659.0], [87.6, 58659.0], [87.7, 58659.0], [87.8, 58660.0], [87.9, 58660.0], [88.0, 58660.0], [88.1, 58660.0], [88.2, 58661.0], [88.3, 58661.0], [88.4, 58661.0], [88.5, 58661.0], [88.6, 58661.0], [88.7, 58661.0], [88.8, 58661.0], [88.9, 58661.0], [89.0, 58661.0], [89.1, 58661.0], [89.2, 58661.0], [89.3, 58661.0], [89.4, 58661.0], [89.5, 58661.0], [89.6, 58661.0], [89.7, 58661.0], [89.8, 58661.0], [89.9, 58661.0], [90.0, 58661.0], [90.1, 58661.0], [90.2, 58662.0], [90.3, 58662.0], [90.4, 58662.0], [90.5, 58662.0], [90.6, 58662.0], [90.7, 58662.0], [90.8, 58662.0], [90.9, 58662.0], [91.0, 58663.0], [91.1, 58663.0], [91.2, 58663.0], [91.3, 58663.0], [91.4, 58663.0], [91.5, 58663.0], [91.6, 58663.0], [91.7, 58665.0], [91.8, 58665.0], [91.9, 58665.0], [92.0, 58665.0], [92.1, 58665.0], [92.2, 58665.0], [92.3, 58665.0], [92.4, 58665.0], [92.5, 58666.0], [92.6, 58666.0], [92.7, 58666.0], [92.8, 58666.0], [92.9, 58667.0], [93.0, 58667.0], [93.1, 58667.0], [93.2, 58667.0], [93.3, 58667.0], [93.4, 58667.0], [93.5, 58667.0], [93.6, 58667.0], [93.7, 58668.0], [93.8, 58668.0], [93.9, 58668.0], [94.0, 58668.0], [94.1, 58668.0], [94.2, 58668.0], [94.3, 58668.0], [94.4, 58668.0], [94.5, 58670.0], [94.6, 58670.0], [94.7, 58670.0], [94.8, 58670.0], [94.9, 58671.0], [95.0, 58671.0], [95.1, 58671.0], [95.2, 58671.0], [95.3, 58678.0], [95.4, 58678.0], [95.5, 58678.0], [95.6, 58678.0], [95.7, 58683.0], [95.8, 58683.0], [95.9, 58683.0], [96.0, 58683.0], [96.1, 58690.0], [96.2, 58690.0], [96.3, 58690.0], [96.4, 58690.0], [96.5, 58727.0], [96.6, 58727.0], [96.7, 58727.0], [96.8, 58727.0], [96.9, 58790.0], [97.0, 58790.0], [97.1, 58790.0], [97.2, 58790.0], [97.3, 59262.0], [97.4, 59262.0], [97.5, 59262.0], [97.6, 59262.0], [97.7, 59414.0], [97.8, 59414.0], [97.9, 59414.0], [98.0, 59414.0], [98.1, 59415.0], [98.2, 59415.0], [98.3, 59415.0], [98.4, 59415.0], [98.5, 59420.0], [98.6, 59420.0], [98.7, 59420.0], [98.8, 59420.0], [98.9, 59701.0], [99.0, 59701.0], [99.1, 59701.0], [99.2, 59701.0], [99.3, 60299.0], [99.4, 60299.0], [99.5, 60299.0], [99.6, 60299.0], [99.7, 60762.0], [99.8, 60762.0], [99.9, 60762.0]], "isOverall": false, "label": "CreateYMR", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 1300.0, "maxY": 114.0, "series": [{"data": [[33100.0, 1.0], [32900.0, 1.0], [36300.0, 1.0], [38100.0, 1.0], [36900.0, 1.0], [37500.0, 1.0], [38500.0, 1.0], [42900.0, 1.0], [42100.0, 1.0], [43500.0, 1.0], [44100.0, 1.0], [44300.0, 2.0], [44500.0, 1.0], [45100.0, 1.0], [45300.0, 1.0], [45700.0, 1.0], [45900.0, 1.0], [46300.0, 1.0], [46900.0, 1.0], [47500.0, 1.0], [47700.0, 1.0], [48500.0, 1.0], [51100.0, 1.0], [49700.0, 1.0], [52500.0, 1.0], [54100.0, 1.0], [55900.0, 1.0], [58500.0, 1.0], [58700.0, 2.0], [59700.0, 1.0], [60700.0, 1.0], [1300.0, 1.0], [1400.0, 2.0], [1600.0, 1.0], [1700.0, 1.0], [1800.0, 1.0], [1900.0, 2.0], [2100.0, 1.0], [2200.0, 1.0], [2300.0, 1.0], [2400.0, 2.0], [2500.0, 1.0], [2700.0, 1.0], [2800.0, 2.0], [2900.0, 1.0], [3100.0, 1.0], [3200.0, 2.0], [3300.0, 1.0], [3400.0, 1.0], [4700.0, 1.0], [6100.0, 1.0], [10200.0, 2.0], [10000.0, 1.0], [10500.0, 1.0], [11000.0, 1.0], [11500.0, 1.0], [12100.0, 1.0], [12300.0, 1.0], [13200.0, 1.0], [13500.0, 1.0], [14800.0, 1.0], [14500.0, 1.0], [15100.0, 1.0], [16000.0, 1.0], [15900.0, 1.0], [16900.0, 1.0], [18200.0, 2.0], [19400.0, 1.0], [19100.0, 2.0], [19000.0, 1.0], [18800.0, 1.0], [20200.0, 1.0], [19600.0, 1.0], [21500.0, 1.0], [23100.0, 1.0], [25400.0, 1.0], [25200.0, 1.0], [24700.0, 1.0], [25100.0, 1.0], [25300.0, 1.0], [27100.0, 2.0], [27400.0, 1.0], [27500.0, 1.0], [27200.0, 1.0], [27000.0, 1.0], [26800.0, 1.0], [28000.0, 1.0], [28400.0, 1.0], [27700.0, 1.0], [29000.0, 1.0], [28800.0, 1.0], [29300.0, 1.0], [29800.0, 1.0], [30600.0, 2.0], [30800.0, 1.0], [31600.0, 1.0], [31200.0, 1.0], [32600.0, 1.0], [32400.0, 1.0], [36000.0, 1.0], [35000.0, 1.0], [38000.0, 1.0], [37000.0, 1.0], [37400.0, 1.0], [44000.0, 1.0], [44600.0, 3.0], [46800.0, 2.0], [46000.0, 1.0], [48400.0, 1.0], [48600.0, 1.0], [48200.0, 1.0], [47200.0, 1.0], [49600.0, 1.0], [52000.0, 1.0], [51400.0, 1.0], [56800.0, 1.0], [56000.0, 1.0], [58600.0, 114.0], [59200.0, 1.0], [57800.0, 1.0], [58400.0, 1.0], [59400.0, 3.0], [60200.0, 1.0]], "isOverall": false, "label": "CreateYMR", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 60700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 134.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 3.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 134.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 116.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.575644842E12, "maxY": 20.0, "series": [{"data": [[1.575644921E12, 20.0], [1.575645347E12, 20.0], [1.575645392E12, 11.0], [1.575645175E12, 20.0], [1.575645396E12, 10.0], [1.57564497E12, 20.0], [1.575645183E12, 20.0], [1.575645052E12, 20.0], [1.575645351E12, 20.0], [1.575645294E12, 20.0], [1.575644954E12, 20.0], [1.575644909E12, 20.0], [1.575645122E12, 20.0], [1.575644958E12, 20.0], [1.575645171E12, 20.0], [1.57564513E12, 20.0], [1.575645384E12, 12.0], [1.575644999E12, 20.0], [1.575645241E12, 20.0], [1.575645409E12, 2.5], [1.57564511E12, 20.0], [1.575644856E12, 20.0], [1.575645282E12, 20.0], [1.575645118E12, 20.0], [1.575644987E12, 20.0], [1.575645286E12, 20.0], [1.575644889E12, 20.0], [1.575645188E12, 20.0], [1.575645401E12, 8.0], [1.575645274E12, 20.0], [1.575644844E12, 20.0], [1.575645057E12, 20.0], [1.575645356E12, 14.0], [1.575644971E12, 20.0], [1.575645016E12, 20.0], [1.575645065E12, 20.0], [1.575645024E12, 20.0], [1.575645237E12, 20.0], [1.575645233E12, 20.0], [1.575644934E12, 20.0], [1.575644893E12, 20.0], [1.575645178E12, 20.0], [1.575644875E12, 20.0], [1.57564492E12, 20.0], [1.575644969E12, 20.0], [1.575644842E12, 20.0], [1.575645354E12, 16.0], [1.575645051E12, 20.0], [1.57564501E12, 20.0], [1.575645166E12, 20.0], [1.575645338E12, 20.0], [1.575645121E12, 20.0], [1.575645293E12, 20.0], [1.575645129E12, 20.0], [1.575645342E12, 20.0], [1.575645297E12, 20.0], [1.575644871E12, 20.0], [1.575645072E12, 20.0], [1.575644986E12, 20.0], [1.575645068E12, 20.0], [1.575644982E12, 20.0], [1.575645289E12, 20.0], [1.57564499E12, 20.0], [1.575645244E12, 20.0], [1.575645117E12, 20.0], [1.57564506E12, 20.0], [1.575644933E12, 20.0], [1.575645359E12, 13.0], [1.575645228E12, 20.0], [1.575644843E12, 20.0], [1.575644937E12, 20.0], [1.575645236E12, 20.0], [1.575644851E12, 20.0], [1.575645023E12, 20.0], [1.575644892E12, 20.0], [1.575645404E12, 6.5], [1.575645019E12, 20.0], [1.575644964E12, 20.0], [1.575645177E12, 20.0], [1.575645345E12, 20.0], [1.575645005E12, 20.0], [1.575644919E12, 20.0], [1.575645353E12, 18.5], [1.575645054E12, 20.0], [1.575645267E12, 20.0], [1.575645013E12, 20.0], [1.575645181E12, 20.0], [1.575645124E12, 20.0], [1.575645296E12, 20.0], [1.575644993E12, 20.0], [1.575645292E12, 20.0], [1.575644907E12, 20.0], [1.575644866E12, 20.0], [1.5756453E12, 20.0], [1.575644915E12, 20.0], [1.57564496E12, 20.0], [1.575644956E12, 20.0], [1.575645169E12, 20.0], [1.57564487E12, 20.0], [1.575645341E12, 20.0], [1.575644985E12, 20.0], [1.575645284E12, 20.0], [1.575644899E12, 20.0], [1.575644944E12, 20.0], [1.575645071E12, 20.0], [1.575645112E12, 20.0], [1.575645325E12, 20.0], [1.575645239E12, 20.0], [1.575644948E12, 20.0], [1.575645075E12, 20.0], [1.575645333E12, 20.0], [1.575645247E12, 20.0], [1.575645116E12, 20.0], [1.575645288E12, 20.0], [1.575645014E12, 20.0], [1.575645186E12, 20.0], [1.575645399E12, 9.0], [1.575645235E12, 20.0], [1.575644891E12, 20.0], [1.575644936E12, 20.0], [1.575645063E12, 20.0], [1.575645049E12, 20.0], [1.575644922E12, 20.0], [1.575645004E12, 20.0], [1.575644918E12, 20.0], [1.575645131E12, 20.0], [1.575644877E12, 20.0], [1.575645176E12, 20.0], [1.575645012E12, 20.0], [1.575644926E12, 20.0], [1.575644881E12, 20.0], [1.57564518E12, 20.0], [1.575645168E12, 20.0], [1.575645295E12, 20.0], [1.575644865E12, 20.0], [1.575644955E12, 20.0], [1.575645E12, 20.0], [1.575645127E12, 20.0], [1.575645029E12, 20.0], [1.575645242E12, 20.0], [1.575644939E12, 20.0], [1.575645238E12, 20.0], [1.575645111E12, 20.0], [1.57564541E12, 1.0], [1.575644947E12, 20.0], [1.575645246E12, 20.0], [1.575644992E12, 20.0], [1.575645119E12, 20.0], [1.575644902E12, 20.0], [1.575644861E12, 20.0], [1.575645074E12, 20.0], [1.575645287E12, 20.0], [1.575645017E12, 20.0], [1.57564523E12, 20.0], [1.57564489E12, 20.0], [1.575644972E12, 20.0], [1.575644845E12, 20.0], [1.575645058E12, 20.0], [1.575644894E12, 20.0], [1.575645107E12, 20.0], [1.575645406E12, 4.5], [1.575645279E12, 20.0], [1.575645062E12, 20.0], [1.575645021E12, 20.0], [1.575644935E12, 20.0], [1.575645234E12, 20.0]], "isOverall": false, "label": "CreateYMR", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.57564541E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 41512.33760683762, "minX": 1.0, "maxY": 58683.0, "series": [{"data": [[8.0, 58678.0], [2.0, 58635.0], [9.0, 58630.0], [10.0, 58645.0], [11.0, 58666.0], [12.0, 58656.0], [3.0, 58644.0], [13.0, 58632.0], [14.0, 58683.0], [15.0, 58653.0], [16.0, 58653.0], [4.0, 58625.0], [1.0, 58648.0], [17.0, 58657.0], [18.0, 58668.0], [19.0, 58670.0], [20.0, 41512.33760683762], [5.0, 58640.0], [6.0, 58646.0], [7.0, 58661.0]], "isOverall": false, "label": "CreateYMR", "isController": false}, {"data": [[19.249011857707508, 42799.51383399211]], "isOverall": false, "label": "CreateYMR-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 20.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 390.0, "minX": 1.575644842E12, "maxY": 3167601.0, "series": [{"data": [[1.575644921E12, 226101.0], [1.575645347E12, 780.0], [1.575645392E12, 390.0], [1.575645175E12, 780.0], [1.575645396E12, 390.0], [1.57564497E12, 1794135.0], [1.575645183E12, 1858968.0], [1.575645052E12, 780.0], [1.575645351E12, 1560.0], [1.575645294E12, 780.0], [1.575644954E12, 1868003.0], [1.575644909E12, 2294147.0], [1.575645122E12, 1853074.0], [1.575644958E12, 953048.0], [1.575645171E12, 390.0], [1.57564513E12, 1868010.0], [1.575645384E12, 390.0], [1.575644999E12, 1832919.0], [1.575645241E12, 390.0], [1.575645409E12, 780.0], [1.57564511E12, 780.0], [1.575644856E12, 1783492.0], [1.575645282E12, 1800226.0], [1.575645118E12, 1809822.0], [1.575644987E12, 943147.0], [1.575645286E12, 390.0], [1.575644889E12, 2124160.0], [1.575645188E12, 1784279.0], [1.575645401E12, 390.0], [1.575645274E12, 1817474.0], [1.575644844E12, 201355.0], [1.575645057E12, 1794135.0], [1.575645356E12, 390.0], [1.575644971E12, 933714.0], [1.575645016E12, 1809425.0], [1.575645065E12, 1807002.0], [1.575645024E12, 1794128.0], [1.575645237E12, 780.0], [1.575645233E12, 390.0], [1.575644934E12, 2503330.0], [1.575644893E12, 226580.0], [1.575645178E12, 1806437.0], [1.575644875E12, 106582.0], [1.57564492E12, 462524.0], [1.575644969E12, 921434.0], [1.575644842E12, 43225.0], [1.575645354E12, 1170.0], [1.575645051E12, 390.0], [1.57564501E12, 1800240.0], [1.575645166E12, 390.0], [1.575645338E12, 390.0], [1.575645121E12, 390.0], [1.575645293E12, 780.0], [1.575645129E12, 390.0], [1.575645342E12, 390.0], [1.575645297E12, 390.0], [1.575644871E12, 1867995.0], [1.575645072E12, 934719.0], [1.575644986E12, 1779957.0], [1.575645068E12, 390.0], [1.575644982E12, 1783499.0], [1.575645289E12, 1807002.0], [1.57564499E12, 478717.0], [1.575645244E12, 390.0], [1.575645117E12, 780.0], [1.57564506E12, 1822927.0], [1.575644933E12, 228091.0], [1.575645359E12, 390.0], [1.575645228E12, 780.0], [1.575644843E12, 42313.0], [1.575644937E12, 467985.0], [1.575645236E12, 780.0], [1.575644851E12, 1805324.0], [1.575645023E12, 390.0], [1.575644892E12, 546941.0], [1.575645404E12, 780.0], [1.575645019E12, 390.0], [1.575644964E12, 1822934.0], [1.575645177E12, 780.0], [1.575645345E12, 780.0], [1.575645005E12, 1779950.0], [1.575644919E12, 1156749.0], [1.575645353E12, 780.0], [1.575645054E12, 1792216.0], [1.575645267E12, 1868003.0], [1.575645013E12, 390.0], [1.575645181E12, 780.0], [1.575645124E12, 390.0], [1.575645296E12, 390.0], [1.575644993E12, 2732367.0], [1.575645292E12, 1780347.0], [1.575644907E12, 211877.0], [1.575644866E12, 1817474.0], [1.5756453E12, 1852691.0], [1.575644915E12, 1868002.0], [1.57564496E12, 1817474.0], [1.575644956E12, 224741.0], [1.575645169E12, 780.0], [1.57564487E12, 85752.0], [1.575645341E12, 390.0], [1.575644985E12, 930077.0], [1.575645284E12, 1859038.0], [1.575644899E12, 1794128.0], [1.575644944E12, 462913.0], [1.575645071E12, 1818261.0], [1.575645112E12, 390.0], [1.575645325E12, 390.0], [1.575645239E12, 780.0], [1.575644948E12, 938168.0], [1.575645075E12, 1809432.0], [1.575645333E12, 390.0], [1.575645247E12, 780.0], [1.575645116E12, 390.0], [1.575645288E12, 390.0], [1.575645014E12, 780.0], [1.575645186E12, 390.0], [1.575645399E12, 390.0], [1.575645235E12, 390.0], [1.575644891E12, 362250.0], [1.575644936E12, 3167601.0], [1.575645063E12, 390.0], [1.575645049E12, 390.0], [1.575644922E12, 2455203.0], [1.575645004E12, 229016.0], [1.575644918E12, 1794128.0], [1.575645131E12, 1783499.0], [1.575644877E12, 1817474.0], [1.575645176E12, 390.0], [1.575645012E12, 1783499.0], [1.575644926E12, 210874.0], [1.575644881E12, 1794128.0], [1.57564518E12, 390.0], [1.575645168E12, 390.0], [1.575645295E12, 780.0], [1.575644865E12, 42906.0], [1.575644955E12, 231773.0], [1.575645E12, 228740.0], [1.575645127E12, 390.0], [1.575645029E12, 1792223.0], [1.575645242E12, 390.0], [1.575644939E12, 470246.0], [1.575645238E12, 390.0], [1.575645111E12, 390.0], [1.57564541E12, 390.0], [1.575644947E12, 1794120.0], [1.575645246E12, 390.0], [1.575644992E12, 465610.0], [1.575645119E12, 1859812.0], [1.575644902E12, 231792.0], [1.575644861E12, 1794120.0], [1.575645074E12, 1852698.0], [1.575645287E12, 390.0], [1.575645017E12, 390.0], [1.57564523E12, 390.0], [1.57564489E12, 172109.0], [1.575644972E12, 933474.0], [1.575644845E12, 53636.0], [1.575645058E12, 780.0], [1.575644894E12, 1783513.0], [1.575645107E12, 390.0], [1.575645406E12, 780.0], [1.575645279E12, 1783499.0], [1.575645062E12, 390.0], [1.575645021E12, 1807016.0], [1.575644935E12, 473849.0], [1.575645234E12, 780.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.575644921E12, 20283.0], [1.575645347E12, 40574.0], [1.575645392E12, 20285.0], [1.575645175E12, 40572.0], [1.575645396E12, 20286.0], [1.57564497E12, 20284.0], [1.575645183E12, 40577.0], [1.575645052E12, 40569.0], [1.575645351E12, 81154.0], [1.575645294E12, 40568.0], [1.575644954E12, 20290.0], [1.575644909E12, 40579.0], [1.575645122E12, 40578.0], [1.575644958E12, 20288.0], [1.575645171E12, 20283.0], [1.57564513E12, 20284.0], [1.575645384E12, 20288.0], [1.575644999E12, 20283.0], [1.575645241E12, 20287.0], [1.575645409E12, 40569.0], [1.57564511E12, 40572.0], [1.575644856E12, 20284.0], [1.575645282E12, 20288.0], [1.575645118E12, 40569.0], [1.575644987E12, 20288.0], [1.575645286E12, 20286.0], [1.575644889E12, 142000.0], [1.575645188E12, 60857.0], [1.575645401E12, 20284.0], [1.575645274E12, 20289.0], [1.575644844E12, 202860.0], [1.575645057E12, 20285.0], [1.575645356E12, 20291.0], [1.575644971E12, 20283.0], [1.575645016E12, 20284.0], [1.575645065E12, 20287.0], [1.575645024E12, 20287.0], [1.575645237E12, 40573.0], [1.575645233E12, 20283.0], [1.575644934E12, 60859.0], [1.575644893E12, 20285.0], [1.575645178E12, 60858.0], [1.575644875E12, 20286.0], [1.57564492E12, 20287.0], [1.575644969E12, 20284.0], [1.575644842E12, 20284.0], [1.575645354E12, 60852.0], [1.575645051E12, 20285.0], [1.57564501E12, 20287.0], [1.575645166E12, 20284.0], [1.575645338E12, 20289.0], [1.575645121E12, 20289.0], [1.575645293E12, 40567.0], [1.575645129E12, 20282.0], [1.575645342E12, 20280.0], [1.575645297E12, 20286.0], [1.575644871E12, 20281.0], [1.575645072E12, 40570.0], [1.575644986E12, 20284.0], [1.575645068E12, 20285.0], [1.575644982E12, 20283.0], [1.575645289E12, 20290.0], [1.57564499E12, 20286.0], [1.575645244E12, 20285.0], [1.575645117E12, 40572.0], [1.57564506E12, 20284.0], [1.575644933E12, 20288.0], [1.575645359E12, 20284.0], [1.575645228E12, 40568.0], [1.575644843E12, 81151.0], [1.575644937E12, 20286.0], [1.575645236E12, 40571.0], [1.575644851E12, 20288.0], [1.575645023E12, 20286.0], [1.575644892E12, 81138.0], [1.575645404E12, 40581.0], [1.575645019E12, 20283.0], [1.575644964E12, 20292.0], [1.575645177E12, 40569.0], [1.575645345E12, 40571.0], [1.575645005E12, 20281.0], [1.575644919E12, 81137.0], [1.575645353E12, 40570.0], [1.575645054E12, 20284.0], [1.575645267E12, 20284.0], [1.575645013E12, 20288.0], [1.575645181E12, 40574.0], [1.575645124E12, 20282.0], [1.575645296E12, 20285.0], [1.575644993E12, 40570.0], [1.575645292E12, 40574.0], [1.575644907E12, 40572.0], [1.575644866E12, 20283.0], [1.5756453E12, 20285.0], [1.575644915E12, 20284.0], [1.57564496E12, 20285.0], [1.575644956E12, 20289.0], [1.575645169E12, 40565.0], [1.57564487E12, 40565.0], [1.575645341E12, 20287.0], [1.575644985E12, 60862.0], [1.575645284E12, 20284.0], [1.575644899E12, 20290.0], [1.575644944E12, 20284.0], [1.575645071E12, 60867.0], [1.575645112E12, 20285.0], [1.575645325E12, 20286.0], [1.575645239E12, 40575.0], [1.575644948E12, 20288.0], [1.575645075E12, 20289.0], [1.575645333E12, 20287.0], [1.575645247E12, 40573.0], [1.575645116E12, 20289.0], [1.575645288E12, 20283.0], [1.575645014E12, 40569.0], [1.575645186E12, 20286.0], [1.575645399E12, 20281.0], [1.575645235E12, 20290.0], [1.575644891E12, 81148.0], [1.575644936E12, 60873.0], [1.575645063E12, 20285.0], [1.575645049E12, 20288.0], [1.575644922E12, 101441.0], [1.575645004E12, 20290.0], [1.575644918E12, 20286.0], [1.575645131E12, 20290.0], [1.575644877E12, 20284.0], [1.575645176E12, 20283.0], [1.575645012E12, 20285.0], [1.575644926E12, 40567.0], [1.575644881E12, 20290.0], [1.57564518E12, 20285.0], [1.575645168E12, 20287.0], [1.575645295E12, 40570.0], [1.575644865E12, 20285.0], [1.575644955E12, 20284.0], [1.575645E12, 20286.0], [1.575645127E12, 20288.0], [1.575645029E12, 20283.0], [1.575645242E12, 20292.0], [1.575644939E12, 20284.0], [1.575645238E12, 20283.0], [1.575645111E12, 20283.0], [1.57564541E12, 20285.0], [1.575644947E12, 20283.0], [1.575645246E12, 20293.0], [1.575644992E12, 20288.0], [1.575645119E12, 40567.0], [1.575644902E12, 20289.0], [1.575644861E12, 20285.0], [1.575645074E12, 20285.0], [1.575645287E12, 20283.0], [1.575645017E12, 20283.0], [1.57564523E12, 20289.0], [1.57564489E12, 81148.0], [1.575644972E12, 20289.0], [1.575644845E12, 40573.0], [1.575645058E12, 40574.0], [1.575644894E12, 20285.0], [1.575645107E12, 20287.0], [1.575645406E12, 40567.0], [1.575645279E12, 20290.0], [1.575645062E12, 20285.0], [1.575645021E12, 20287.0], [1.575644935E12, 20286.0], [1.575645234E12, 40570.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.57564541E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1468.0, "minX": 1.575644842E12, "maxY": 60762.0, "series": [{"data": [[1.575644921E12, 29071.0], [1.575645347E12, 58626.5], [1.575645392E12, 58666.0], [1.575645175E12, 58655.0], [1.575645396E12, 58645.0], [1.57564497E12, 23148.0], [1.575645183E12, 37788.0], [1.575645052E12, 58648.0], [1.575645351E12, 58650.75], [1.575645294E12, 58650.5], [1.575644954E12, 38545.0], [1.575644909E12, 19395.5], [1.575645122E12, 53445.0], [1.575644958E12, 49670.0], [1.575645171E12, 58644.0], [1.57564513E12, 58408.0], [1.575645384E12, 58656.0], [1.575644999E12, 12197.0], [1.575645241E12, 58642.0], [1.575645409E12, 58639.5], [1.57564511E12, 58686.0], [1.575644856E12, 14835.0], [1.575645282E12, 37445.0], [1.575645118E12, 50777.5], [1.575644987E12, 52027.0], [1.575645286E12, 58634.0], [1.575644889E12, 43419.57142857143], [1.575645188E12, 57799.0], [1.575645401E12, 58678.0], [1.575645274E12, 27794.0], [1.575644844E12, 2649.0], [1.575645057E12, 33104.0], [1.575645356E12, 58683.0], [1.575644971E12, 32466.0], [1.575645016E12, 44656.0], [1.575645065E12, 44310.0], [1.575645024E12, 54185.0], [1.575645237E12, 58640.5], [1.575645233E12, 58657.0], [1.575644934E12, 22843.0], [1.575644893E12, 4727.0], [1.575645178E12, 42429.666666666664], [1.575644875E12, 10223.0], [1.57564492E12, 26816.0], [1.575644969E12, 24715.0], [1.575644842E12, 1468.0], [1.575645354E12, 58654.333333333336], [1.575645051E12, 58643.0], [1.57564501E12, 25179.0], [1.575645166E12, 58650.0], [1.575645338E12, 58628.0], [1.575645121E12, 58630.0], [1.575645293E12, 58637.0], [1.575645129E12, 58660.0], [1.575645342E12, 58657.0], [1.575645297E12, 58645.0], [1.575644871E12, 29882.0], [1.575645072E12, 58210.5], [1.575644986E12, 49786.0], [1.575645068E12, 58627.0], [1.575644982E12, 46004.0], [1.575645289E12, 47239.0], [1.57564499E12, 55940.0], [1.575645244E12, 58633.0], [1.575645117E12, 58647.5], [1.57564506E12, 37077.0], [1.575644933E12, 11000.0], [1.575645359E12, 58632.0], [1.575645228E12, 58645.5], [1.575644843E12, 1831.0], [1.575644937E12, 18261.0], [1.575645236E12, 58656.5], [1.575644851E12, 10505.0], [1.575645023E12, 58634.0], [1.575644892E12, 14247.75], [1.575645404E12, 58653.5], [1.575645019E12, 58640.0], [1.575644964E12, 15936.0], [1.575645177E12, 58645.5], [1.575645345E12, 58648.0], [1.575645005E12, 18871.0], [1.575644919E12, 27381.75], [1.575645353E12, 58669.0], [1.575645054E12, 25310.0], [1.575645267E12, 19666.0], [1.575645013E12, 58652.0], [1.575645181E12, 58644.0], [1.575645124E12, 58637.0], [1.575645296E12, 58663.0], [1.575644993E12, 59341.0], [1.575645292E12, 55592.0], [1.575644907E12, 37280.0], [1.575644866E12, 25470.0], [1.5756453E12, 60762.0], [1.575644915E12, 44676.0], [1.57564496E12, 51190.0], [1.575644956E12, 48439.0], [1.575645169E12, 58650.5], [1.57564487E12, 27276.5], [1.575645341E12, 58655.0], [1.575644985E12, 55274.0], [1.575645284E12, 42137.0], [1.575644899E12, 18204.0], [1.575644944E12, 25209.0], [1.575645071E12, 56250.0], [1.575645112E12, 58638.0], [1.575645325E12, 58641.0], [1.575645239E12, 58661.0], [1.575644948E12, 29331.0], [1.575645075E12, 59415.0], [1.575645333E12, 58661.0], [1.575645247E12, 58648.5], [1.575645116E12, 58656.0], [1.575645288E12, 58644.0], [1.575645014E12, 58650.5], [1.575645186E12, 58640.0], [1.575645399E12, 58630.0], [1.575645235E12, 58629.0], [1.575644891E12, 13096.25], [1.575644936E12, 14884.666666666666], [1.575645063E12, 58654.0], [1.575645049E12, 58657.0], [1.575644922E12, 30571.4], [1.575645004E12, 19006.0], [1.575644918E12, 19114.0], [1.575645131E12, 60299.0], [1.575644877E12, 10275.0], [1.575645176E12, 58646.0], [1.575645012E12, 30663.0], [1.575644926E12, 36227.5], [1.575644881E12, 19482.0], [1.57564518E12, 58632.0], [1.575645168E12, 58790.0], [1.575645295E12, 58649.5], [1.575644865E12, 21532.0], [1.575644955E12, 47716.0], [1.575645E12, 14553.0], [1.575645127E12, 58671.0], [1.575645029E12, 59701.0], [1.575645242E12, 58627.0], [1.575644939E12, 19181.0], [1.575645238E12, 58641.0], [1.575645111E12, 58626.0], [1.57564541E12, 58648.0], [1.575644947E12, 28830.0], [1.575645246E12, 58647.0], [1.575644992E12, 59414.0], [1.575645119E12, 46914.0], [1.575644902E12, 27547.0], [1.575644861E12, 20258.0], [1.575645074E12, 56822.0], [1.575645287E12, 58646.0], [1.575645017E12, 58641.0], [1.57564523E12, 58651.0], [1.57564489E12, 45856.75], [1.575644972E12, 35019.0], [1.575644845E12, 2572.0], [1.575645058E12, 58642.5], [1.575644894E12, 38116.0], [1.575645107E12, 58690.0], [1.575645406E12, 58632.5], [1.575645279E12, 32997.0], [1.575645062E12, 58647.0], [1.575645021E12, 48648.0], [1.575644935E12, 13228.0], [1.575645234E12, 58647.0]], "isOverall": false, "label": "CreateYMR", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.57564541E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1467.0, "minX": 1.575644842E12, "maxY": 58790.0, "series": [{"data": [[1.575644921E12, 27574.0], [1.575645347E12, 58626.5], [1.575645392E12, 58666.0], [1.575645175E12, 58655.0], [1.575645396E12, 58645.0], [1.57564497E12, 15709.0], [1.575645183E12, 36075.5], [1.575645052E12, 58648.0], [1.575645351E12, 58650.75], [1.575645294E12, 58650.5], [1.575644954E12, 32800.0], [1.575644909E12, 15591.0], [1.575645122E12, 49596.5], [1.575644958E12, 44667.0], [1.575645171E12, 58644.0], [1.57564513E12, 51063.0], [1.575645384E12, 58656.0], [1.575644999E12, 7924.0], [1.575645241E12, 58642.0], [1.575645409E12, 58639.5], [1.57564511E12, 58686.0], [1.575644856E12, 14055.0], [1.575645282E12, 31577.0], [1.575645118E12, 46442.5], [1.575644987E12, 46911.0], [1.575645286E12, 58634.0], [1.575644889E12, 43186.71428571429], [1.575645188E12, 56625.666666666664], [1.575645401E12, 58678.0], [1.575645274E12, 21547.0], [1.575644844E12, 2623.5999999999995], [1.575645057E12, 25841.0], [1.575645356E12, 58683.0], [1.575644971E12, 27619.0], [1.575645016E12, 38601.0], [1.575645065E12, 38185.0], [1.575645024E12, 47514.0], [1.575645237E12, 58640.5], [1.575645233E12, 58657.0], [1.575644934E12, 18791.666666666664], [1.575644893E12, 4353.0], [1.575645178E12, 41271.0], [1.575644875E12, 9980.0], [1.57564492E12, 23739.0], [1.575644969E12, 19595.0], [1.575644842E12, 1467.0], [1.575645354E12, 58654.333333333336], [1.575645051E12, 58643.0], [1.57564501E12, 17511.0], [1.575645166E12, 58650.0], [1.575645338E12, 58628.0], [1.575645121E12, 58630.0], [1.575645293E12, 58637.0], [1.575645129E12, 58660.0], [1.575645342E12, 58657.0], [1.575645297E12, 58645.0], [1.575644871E12, 29105.0], [1.575645072E12, 55164.5], [1.575644986E12, 42599.0], [1.575645068E12, 58627.0], [1.575644982E12, 39056.0], [1.575645289E12, 43160.0], [1.57564499E12, 52672.0], [1.575645244E12, 58633.0], [1.575645117E12, 58647.5], [1.57564506E12, 32223.0], [1.575644933E12, 9496.0], [1.575645359E12, 58632.0], [1.575645228E12, 58645.5], [1.575644843E12, 1831.0], [1.575644937E12, 17762.0], [1.575645236E12, 58656.5], [1.575644851E12, 9727.0], [1.575645023E12, 58634.0], [1.575644892E12, 13597.25], [1.575645404E12, 58653.5], [1.575645019E12, 58640.0], [1.575644964E12, 9967.0], [1.575645177E12, 58645.5], [1.575645345E12, 58648.0], [1.575645005E12, 12994.0], [1.575644919E12, 26579.0], [1.575645353E12, 58669.0], [1.575645054E12, 17454.0], [1.575645267E12, 16420.0], [1.575645013E12, 58652.0], [1.575645181E12, 58644.0], [1.575645124E12, 58637.0], [1.575645296E12, 58663.0], [1.575644993E12, 53574.0], [1.575645292E12, 53814.0], [1.575644907E12, 36654.5], [1.575644866E12, 24615.0], [1.5756453E12, 53474.0], [1.575644915E12, 36348.0], [1.57564496E12, 43244.0], [1.575644956E12, 46567.0], [1.575645169E12, 58650.5], [1.57564487E12, 27027.0], [1.575645341E12, 58655.0], [1.575644985E12, 53679.666666666664], [1.575645284E12, 38578.0], [1.575644899E12, 17038.0], [1.575644944E12, 24588.0], [1.575645071E12, 53947.0], [1.575645112E12, 58638.0], [1.575645325E12, 58641.0], [1.575645239E12, 58661.0], [1.575644948E12, 24220.0], [1.575645075E12, 53234.0], [1.575645333E12, 58661.0], [1.575645247E12, 58648.5], [1.575645116E12, 58656.0], [1.575645288E12, 58644.0], [1.575645014E12, 58650.5], [1.575645186E12, 58640.0], [1.575645399E12, 58630.0], [1.575645235E12, 58629.0], [1.575644891E12, 12849.25], [1.575644936E12, 12160.666666666666], [1.575645063E12, 58654.0], [1.575645049E12, 58657.0], [1.575644922E12, 28417.0], [1.575645004E12, 17208.0], [1.575644918E12, 13592.0], [1.575645131E12, 56016.0], [1.575644877E12, 8740.0], [1.575645176E12, 58646.0], [1.575645012E12, 24594.0], [1.575644926E12, 35668.5], [1.575644881E12, 18585.0], [1.57564518E12, 58632.0], [1.575645168E12, 58790.0], [1.575645295E12, 58649.5], [1.575644865E12, 21531.0], [1.575644955E12, 45875.0], [1.575645E12, 13416.0], [1.575645127E12, 58671.0], [1.575645029E12, 52361.0], [1.575645242E12, 58627.0], [1.575644939E12, 16617.0], [1.575645238E12, 58641.0], [1.575645111E12, 58626.0], [1.57564541E12, 58648.0], [1.575644947E12, 23777.0], [1.575645246E12, 58647.0], [1.575644992E12, 56356.0], [1.575645119E12, 43591.0], [1.575644902E12, 27164.0], [1.575644861E12, 19490.0], [1.575645074E12, 47892.0], [1.575645287E12, 58646.0], [1.575645017E12, 58641.0], [1.57564523E12, 58651.0], [1.57564489E12, 45733.0], [1.575644972E12, 31197.0], [1.575644845E12, 2571.5], [1.575645058E12, 58642.5], [1.575644894E12, 28731.0], [1.575645107E12, 58690.0], [1.575645406E12, 58632.5], [1.575645279E12, 25489.0], [1.575645062E12, 58647.0], [1.575645021E12, 40972.0], [1.575644935E12, 10491.0], [1.575645234E12, 58647.0]], "isOverall": false, "label": "CreateYMR", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.57564541E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 372.0, "minX": 1.575644842E12, "maxY": 418.0, "series": [{"data": [[1.575644921E12, 405.0], [1.575645347E12, 377.5], [1.575645392E12, 394.0], [1.575645175E12, 388.0], [1.575645396E12, 386.0], [1.57564497E12, 394.0], [1.575645183E12, 387.5], [1.575645052E12, 392.0], [1.575645351E12, 389.75], [1.575645294E12, 391.5], [1.575644954E12, 387.0], [1.575644909E12, 391.5], [1.575645122E12, 389.5], [1.575644958E12, 393.0], [1.575645171E12, 386.0], [1.57564513E12, 379.0], [1.575645384E12, 390.0], [1.575644999E12, 377.0], [1.575645241E12, 382.0], [1.575645409E12, 381.5], [1.57564511E12, 387.0], [1.575644856E12, 399.0], [1.575645282E12, 380.0], [1.575645118E12, 393.0], [1.575644987E12, 388.0], [1.575645286E12, 383.0], [1.575644889E12, 389.2857142857143], [1.575645188E12, 392.6666666666667], [1.575645401E12, 410.0], [1.575645274E12, 384.0], [1.575644844E12, 393.70000000000005], [1.575645057E12, 373.0], [1.575645356E12, 418.0], [1.575644971E12, 390.0], [1.575645016E12, 393.0], [1.575645065E12, 390.0], [1.575645024E12, 377.0], [1.575645237E12, 384.5], [1.575645233E12, 396.0], [1.575644934E12, 386.6666666666667], [1.575644893E12, 391.0], [1.575645178E12, 390.0], [1.575644875E12, 377.0], [1.57564492E12, 386.0], [1.575644969E12, 394.0], [1.575644842E12, 385.0], [1.575645354E12, 391.3333333333333], [1.575645051E12, 386.0], [1.57564501E12, 399.0], [1.575645166E12, 382.0], [1.575645338E12, 375.0], [1.575645121E12, 380.0], [1.575645293E12, 384.0], [1.575645129E12, 399.0], [1.575645342E12, 395.0], [1.575645297E12, 388.0], [1.575644871E12, 394.0], [1.575645072E12, 380.0], [1.575644986E12, 388.0], [1.575645068E12, 377.0], [1.575644982E12, 387.0], [1.575645289E12, 395.0], [1.57564499E12, 381.0], [1.575645244E12, 376.0], [1.575645117E12, 389.5], [1.57564506E12, 387.0], [1.575644933E12, 394.0], [1.575645359E12, 377.0], [1.575645228E12, 388.0], [1.575644843E12, 392.5], [1.575644937E12, 405.0], [1.575645236E12, 392.5], [1.575644851E12, 396.0], [1.575645023E12, 382.0], [1.575644892E12, 383.75], [1.575645404E12, 391.0], [1.575645019E12, 391.0], [1.575644964E12, 392.0], [1.575645177E12, 386.0], [1.575645345E12, 390.5], [1.575645005E12, 392.0], [1.575644919E12, 395.75], [1.575645353E12, 401.0], [1.575645054E12, 376.0], [1.575645267E12, 373.0], [1.575645013E12, 391.0], [1.575645181E12, 386.0], [1.575645124E12, 381.0], [1.575645296E12, 394.0], [1.575644993E12, 379.0], [1.575645292E12, 381.5], [1.575644907E12, 396.5], [1.575644866E12, 376.0], [1.5756453E12, 396.0], [1.575644915E12, 385.0], [1.57564496E12, 391.0], [1.575644956E12, 390.0], [1.575645169E12, 389.0], [1.57564487E12, 396.5], [1.575645341E12, 396.0], [1.575644985E12, 384.3333333333333], [1.575645284E12, 372.0], [1.575644899E12, 400.0], [1.575644944E12, 395.0], [1.575645071E12, 386.3333333333333], [1.575645112E12, 387.0], [1.575645325E12, 378.0], [1.575645239E12, 398.5], [1.575644948E12, 377.0], [1.575645075E12, 372.0], [1.575645333E12, 395.0], [1.575645247E12, 388.0], [1.575645116E12, 398.0], [1.575645288E12, 387.0], [1.575645014E12, 392.0], [1.575645186E12, 380.0], [1.575645399E12, 375.0], [1.575645235E12, 380.0], [1.575644891E12, 389.25], [1.575644936E12, 400.0], [1.575645063E12, 393.0], [1.575645049E12, 397.0], [1.575644922E12, 386.0], [1.575645004E12, 400.0], [1.575644918E12, 390.0], [1.575645131E12, 377.0], [1.575644877E12, 393.0], [1.575645176E12, 388.0], [1.575645012E12, 387.0], [1.575644926E12, 387.0], [1.575644881E12, 384.0], [1.57564518E12, 378.0], [1.575645168E12, 387.0], [1.575645295E12, 392.5], [1.575644865E12, 400.0], [1.575644955E12, 380.0], [1.575645E12, 391.0], [1.575645127E12, 411.0], [1.575645029E12, 394.0], [1.575645242E12, 376.0], [1.575644939E12, 392.0], [1.575645238E12, 385.0], [1.575645111E12, 376.0], [1.57564541E12, 389.0], [1.575644947E12, 406.0], [1.575645246E12, 387.0], [1.575644992E12, 387.0], [1.575645119E12, 399.5], [1.575644902E12, 401.0], [1.575644861E12, 385.0], [1.575645074E12, 401.0], [1.575645287E12, 387.0], [1.575645017E12, 386.0], [1.57564523E12, 386.0], [1.57564489E12, 384.0], [1.575644972E12, 375.0], [1.575644845E12, 391.5], [1.575645058E12, 386.5], [1.575644894E12, 389.0], [1.575645107E12, 405.0], [1.575645406E12, 380.0], [1.575645279E12, 395.0], [1.575645062E12, 389.0], [1.575645021E12, 408.0], [1.575644935E12, 396.0], [1.575645234E12, 389.5]], "isOverall": false, "label": "CreateYMR", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.57564541E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1344.0, "minX": 1.575644842E12, "maxY": 60762.0, "series": [{"data": [[1.575644921E12, 29071.0], [1.575644964E12, 15936.0], [1.575645005E12, 18871.0], [1.575644919E12, 28029.0], [1.575645054E12, 25310.0], [1.575645267E12, 19666.0], [1.57564497E12, 23148.0], [1.575645183E12, 16920.0], [1.575644954E12, 38545.0], [1.575644993E12, 59420.0], [1.575645292E12, 52542.0], [1.575644907E12, 37563.0], [1.575644909E12, 32677.0], [1.575644866E12, 25470.0], [1.575645122E12, 48228.0], [1.5756453E12, 60762.0], [1.575644915E12, 44676.0], [1.575644958E12, 49670.0], [1.57564496E12, 51190.0], [1.57564513E12, 58408.0], [1.575644956E12, 48439.0], [1.57564487E12, 27453.0], [1.575644999E12, 12197.0], [1.575644985E12, 48526.0], [1.575645284E12, 42137.0], [1.575644899E12, 18204.0], [1.575644944E12, 25209.0], [1.575645071E12, 51468.0], [1.575644856E12, 14835.0], [1.575645282E12, 37445.0], [1.575644948E12, 29331.0], [1.575645075E12, 59415.0], [1.575645118E12, 42908.0], [1.575644987E12, 52027.0], [1.575644889E12, 45107.0], [1.575645188E12, 56099.0], [1.575645274E12, 27794.0], [1.575644844E12, 3203.0], [1.575645057E12, 33104.0], [1.575644971E12, 32466.0], [1.575645016E12, 44656.0], [1.575645065E12, 44310.0], [1.575645024E12, 54185.0], [1.575644891E12, 46802.0], [1.575644934E12, 44554.0], [1.575644893E12, 4727.0], [1.575644936E12, 16016.0], [1.575644922E12, 31617.0], [1.575645178E12, 10001.0], [1.575645004E12, 19006.0], [1.575644875E12, 10223.0], [1.575644918E12, 19114.0], [1.575645131E12, 60299.0], [1.575644877E12, 10275.0], [1.57564492E12, 26816.0], [1.575644969E12, 24715.0], [1.575645012E12, 30663.0], [1.575644926E12, 36368.0], [1.575644842E12, 1468.0], [1.575644881E12, 19482.0], [1.57564501E12, 25179.0], [1.575644865E12, 21532.0], [1.575644955E12, 47716.0], [1.575645E12, 14553.0], [1.575644871E12, 29882.0], [1.575645029E12, 59701.0], [1.575645072E12, 58599.0], [1.575644986E12, 49786.0], [1.575644939E12, 19181.0], [1.575644982E12, 46004.0], [1.575645289E12, 47239.0], [1.575644947E12, 28830.0], [1.57564499E12, 55940.0], [1.575644992E12, 59414.0], [1.575645119E12, 46995.0], [1.575644902E12, 27547.0], [1.575644861E12, 20258.0], [1.575645074E12, 56822.0], [1.57564506E12, 37077.0], [1.575644933E12, 11000.0], [1.57564489E12, 46350.0], [1.575644972E12, 35019.0], [1.575644843E12, 2180.0], [1.575644845E12, 3385.0], [1.575644937E12, 18261.0], [1.575644851E12, 10505.0], [1.575644894E12, 38116.0], [1.575645279E12, 32997.0], [1.575644892E12, 47527.0], [1.575645021E12, 48648.0], [1.575644935E12, 13228.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.575644921E12, 29071.0], [1.575644964E12, 15936.0], [1.575645005E12, 18871.0], [1.575644919E12, 27086.0], [1.575645054E12, 25310.0], [1.575645267E12, 19666.0], [1.57564497E12, 23148.0], [1.575645183E12, 16920.0], [1.575644954E12, 38545.0], [1.575644993E12, 59262.0], [1.575645292E12, 52542.0], [1.575644907E12, 36997.0], [1.575644909E12, 6114.0], [1.575644866E12, 25470.0], [1.575645122E12, 48228.0], [1.5756453E12, 60762.0], [1.575644915E12, 44676.0], [1.575644958E12, 49670.0], [1.57564496E12, 51190.0], [1.57564513E12, 58408.0], [1.575644956E12, 48439.0], [1.57564487E12, 27100.0], [1.575644999E12, 12197.0], [1.575644985E12, 48526.0], [1.575645284E12, 42137.0], [1.575644899E12, 18204.0], [1.575644944E12, 25209.0], [1.575645071E12, 51468.0], [1.575644856E12, 14835.0], [1.575645282E12, 37445.0], [1.575644948E12, 29331.0], [1.575645075E12, 59415.0], [1.575645118E12, 42908.0], [1.575644987E12, 52027.0], [1.575644889E12, 38059.0], [1.575645188E12, 56099.0], [1.575645274E12, 27794.0], [1.575644844E12, 1941.0], [1.575645057E12, 33104.0], [1.575644971E12, 32466.0], [1.575645016E12, 44656.0], [1.575645065E12, 44310.0], [1.575645024E12, 54185.0], [1.575644891E12, 1344.0], [1.575644934E12, 11599.0], [1.575644893E12, 4727.0], [1.575644936E12, 13505.0], [1.575644922E12, 28474.0], [1.575645178E12, 10001.0], [1.575645004E12, 19006.0], [1.575644875E12, 10223.0], [1.575644918E12, 19114.0], [1.575645131E12, 60299.0], [1.575644877E12, 10275.0], [1.57564492E12, 26816.0], [1.575644969E12, 24715.0], [1.575645012E12, 30663.0], [1.575644926E12, 36087.0], [1.575644842E12, 1468.0], [1.575644881E12, 19482.0], [1.57564501E12, 25179.0], [1.575644865E12, 21532.0], [1.575644955E12, 47716.0], [1.575645E12, 14553.0], [1.575644871E12, 29882.0], [1.575645029E12, 59701.0], [1.575645072E12, 57822.0], [1.575644986E12, 49786.0], [1.575644939E12, 19181.0], [1.575644982E12, 46004.0], [1.575645289E12, 47239.0], [1.575644947E12, 28830.0], [1.57564499E12, 55940.0], [1.575644992E12, 59414.0], [1.575645119E12, 46833.0], [1.575644902E12, 27547.0], [1.575644861E12, 20258.0], [1.575645074E12, 56822.0], [1.57564506E12, 37077.0], [1.575644933E12, 11000.0], [1.57564489E12, 45356.0], [1.575644972E12, 35019.0], [1.575644843E12, 1491.0], [1.575644845E12, 1759.0], [1.575644937E12, 18261.0], [1.575644851E12, 10505.0], [1.575644894E12, 38116.0], [1.575645279E12, 32997.0], [1.575644892E12, 2826.0], [1.575645021E12, 48648.0], [1.575644935E12, 13228.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.575644921E12, 45256.4], [1.575644964E12, 45764.0], [1.575645005E12, 48005.200000000004], [1.575644919E12, 45306.200000000004], [1.575645054E12, 48611.4], [1.575645267E12, 53969.20000000001], [1.57564497E12, 45682.4], [1.575645183E12, 52242.80000000002], [1.575644954E12, 44645.0], [1.575644993E12, 48294.4], [1.575645292E12, 53034.899999999994], [1.575644907E12, 45600.8], [1.575644909E12, 45519.2], [1.575644866E12, 21149.8], [1.575645122E12, 51329.0], [1.5756453E12, 54536.00000000001], [1.575644915E12, 45478.4], [1.575644958E12, 45437.6], [1.57564496E12, 45783.3], [1.57564513E12, 51691.600000000006], [1.575644956E12, 45181.7], [1.57564487E12, 26285.0], [1.575644999E12, 48222.1], [1.575644985E12, 45975.8], [1.575645284E12, 53106.0], [1.575644899E12, 45723.2], [1.575644944E12, 44663.6], [1.575645071E12, 48954.6], [1.575644856E12, 10505.0], [1.575645282E12, 53321.80000000002], [1.575644948E12, 44651.2], [1.575645075E12, 51440.200000000004], [1.575645118E12, 51412.4], [1.575644987E12, 46440.4], [1.575644889E12, 44255.6], [1.575645188E12, 54185.0], [1.575645274E12, 53753.399999999994], [1.575644844E12, 3150.2], [1.575645057E12, 48599.200000000004], [1.575644971E12, 45641.6], [1.575645016E12, 47788.3], [1.575645065E12, 48574.8], [1.575645024E12, 48517.3], [1.575644891E12, 45600.8], [1.575644934E12, 44891.5], [1.575644893E12, 45783.3], [1.575644936E12, 44719.100000000006], [1.575644922E12, 45131.9], [1.575645178E12, 52458.600000000006], [1.575645004E12, 48077.5], [1.575644875E12, 27205.9], [1.575644918E12, 45437.6], [1.575645131E12, 52674.399999999994], [1.575644877E12, 27170.6], [1.57564492E12, 45281.3], [1.575644969E12, 45723.200000000004], [1.575645012E12, 47860.6], [1.575644926E12, 45063.9], [1.575644842E12, 1468.0], [1.575644881E12, 27135.3], [1.57564501E12, 47932.9], [1.575644865E12, 19173.400000000005], [1.575644955E12, 44848.4], [1.575645E12, 48149.8], [1.575644871E12, 27241.2], [1.575645029E12, 48623.6], [1.575645072E12, 49926.40000000001], [1.575644986E12, 46107.799999999996], [1.575644939E12, 44669.8], [1.575644982E12, 45860.5], [1.575645289E12, 52890.20000000001], [1.575644947E12, 44657.4], [1.57564499E12, 46874.50000000001], [1.575644992E12, 47527.0], [1.575645119E12, 51356.8], [1.575644902E12, 45682.4], [1.575644861E12, 14402.00000000001], [1.575645074E12, 51190.0], [1.57564506E12, 48587.0], [1.575644933E12, 45020.799999999996], [1.57564489E12, 45356.0], [1.575644972E12, 45600.8], [1.575644843E12, 2180.0], [1.575644845E12, 3239.4], [1.575644937E12, 44676.0], [1.575644851E12, 4097.00000000001], [1.575644894E12, 45764.0], [1.575645279E12, 53537.600000000006], [1.575644892E12, 45802.6], [1.575645021E12, 48439.0], [1.575644935E12, 44848.4]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.575644921E12, 47527.0], [1.575644964E12, 51190.0], [1.575645005E12, 59419.64], [1.575644919E12, 47527.0], [1.575645054E12, 59664.47], [1.575645267E12, 60113.619999999995], [1.57564497E12, 51190.0], [1.575645183E12, 60125.579999999994], [1.575644954E12, 47527.0], [1.575644993E12, 59419.88], [1.575645292E12, 60077.74], [1.575644907E12, 47527.0], [1.575644909E12, 47527.0], [1.575644866E12, 25470.0], [1.575645122E12, 59630.75], [1.5756453E12, 60586.060000000005], [1.575644915E12, 47527.0], [1.575644958E12, 49670.0], [1.57564496E12, 51190.0], [1.57564513E12, 59627.939999999995], [1.575644956E12, 48439.0], [1.57564487E12, 27453.0], [1.575644999E12, 59419.82], [1.575644985E12, 51190.0], [1.575645284E12, 60089.700000000004], [1.575644899E12, 47527.0], [1.575644944E12, 47527.0], [1.575645071E12, 59653.229999999996], [1.575644856E12, 14835.0], [1.575645282E12, 60095.68], [1.575644948E12, 47527.0], [1.575645075E12, 59641.99], [1.575645118E12, 59639.18], [1.575644987E12, 52027.0], [1.575644889E12, 45107.0], [1.575645188E12, 60119.59999999999], [1.575645274E12, 60107.64000000001], [1.575644844E12, 3203.0], [1.575645057E12, 59661.66], [1.575644971E12, 51190.0], [1.575645016E12, 59419.46], [1.575645065E12, 59656.04], [1.575645024E12, 59419.34], [1.575644891E12, 46802.0], [1.575644934E12, 47527.0], [1.575644893E12, 47527.0], [1.575644936E12, 47527.0], [1.575644922E12, 47527.0], [1.575645178E12, 60131.56], [1.575645004E12, 59419.7], [1.575644875E12, 29882.0], [1.575644918E12, 47527.0], [1.575645131E12, 60137.54], [1.575644877E12, 29882.0], [1.57564492E12, 47527.0], [1.575644969E12, 51190.0], [1.575645012E12, 59419.52], [1.575644926E12, 47527.0], [1.575644842E12, 1468.0], [1.575644881E12, 29882.0], [1.57564501E12, 59419.58], [1.575644865E12, 21532.0], [1.575644955E12, 47716.0], [1.575645E12, 59419.76], [1.575644871E12, 29882.0], [1.575645029E12, 59667.28], [1.575645072E12, 59647.61], [1.575644986E12, 51190.0], [1.575644939E12, 47527.0], [1.575644982E12, 51190.0], [1.575645289E12, 60083.719999999994], [1.575644947E12, 47527.0], [1.57564499E12, 55940.0], [1.575644992E12, 59414.0], [1.575645119E12, 59633.560000000005], [1.575644902E12, 47527.0], [1.575644861E12, 20258.0], [1.575645074E12, 59644.799999999996], [1.57564506E12, 59658.85], [1.575644933E12, 47527.0], [1.57564489E12, 46350.0], [1.575644972E12, 51190.0], [1.575644843E12, 2180.0], [1.575644845E12, 3385.0], [1.575644937E12, 47527.0], [1.575644851E12, 10505.0], [1.575644894E12, 47527.0], [1.575645279E12, 60101.65999999999], [1.575644892E12, 47527.0], [1.575645021E12, 59419.4], [1.575644935E12, 47527.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.575644921E12, 46271.4], [1.575644964E12, 47621.5], [1.575645005E12, 51775.899999999994], [1.575644919E12, 46310.7], [1.575645054E12, 54799.24999999999], [1.575645267E12, 58897.34999999999], [1.57564497E12, 47602.6], [1.575645183E12, 58963.65], [1.575644954E12, 45908.75], [1.575644993E12, 51943.299999999996], [1.575645292E12, 58698.450000000004], [1.575644907E12, 46485.6], [1.575644909E12, 46440.4], [1.575644866E12, 24879.299999999992], [1.575645122E12, 58404.75], [1.5756453E12, 59277.2], [1.575644915E12, 46417.8], [1.575644958E12, 47236.99999999999], [1.57564496E12, 47630.95], [1.57564513E12, 58541.7], [1.575644956E12, 46643.799999999996], [1.57564487E12, 27364.75], [1.575644999E12, 51901.45], [1.575644985E12, 47860.59999999999], [1.575645284E12, 58764.75], [1.575644899E12, 46553.4], [1.575644944E12, 45937.7], [1.575645071E12, 54448.249999999985], [1.575644856E12, 14835.0], [1.575645282E12, 58797.9], [1.575644948E12, 45918.4], [1.575645075E12, 58560.149999999994], [1.575645118E12, 58521.299999999996], [1.575644987E12, 48640.399999999994], [1.575644889E12, 44712.6], [1.575645188E12, 58930.5], [1.575645274E12, 58864.2], [1.575644844E12, 3203.0], [1.575645057E12, 54711.49999999999], [1.575644971E12, 47593.15], [1.575645016E12, 51650.35], [1.575645065E12, 54535.99999999998], [1.575645024E12, 52998.09999999998], [1.575644891E12, 46271.4], [1.575644934E12, 46055.25], [1.575644893E12, 46598.6], [1.575644936E12, 45976.65], [1.575644922E12, 46173.15], [1.575645178E12, 58996.799999999996], [1.575645004E12, 51817.75], [1.575644875E12, 29031.849999999995], [1.575644918E12, 46395.2], [1.575645131E12, 59029.95], [1.575644877E12, 28910.399999999994], [1.57564492E12, 46291.049999999996], [1.575644969E12, 47612.05], [1.575645012E12, 51692.2], [1.575644926E12, 46133.85], [1.575644842E12, 1468.0], [1.575644881E12, 28788.949999999993], [1.57564501E12, 51734.049999999996], [1.575644865E12, 21404.6], [1.575644955E12, 46232.1], [1.575645E12, 51859.6], [1.575644871E12, 29153.3], [1.575645029E12, 54886.999999999985], [1.575645072E12, 57860.85], [1.575644986E12, 48452.049999999996], [1.575644939E12, 45947.35], [1.575644982E12, 47574.25], [1.575645289E12, 58731.59999999999], [1.575644947E12, 45928.049999999996], [1.57564499E12, 49675.8], [1.575644992E12, 49786.0], [1.575645119E12, 58443.6], [1.575644902E12, 46530.8], [1.575644861E12, 19986.849999999995], [1.575645074E12, 57822.0], [1.57564506E12, 54623.75], [1.575644933E12, 46114.2], [1.57564489E12, 45957.0], [1.575644972E12, 47583.7], [1.575644843E12, 2180.0], [1.575644845E12, 3385.0], [1.575644937E12, 45957.0], [1.575644851E12, 10505.0], [1.575644894E12, 46576.0], [1.575645279E12, 58831.049999999996], [1.575644892E12, 46621.2], [1.575645021E12, 51608.5], [1.575644935E12, 46035.6]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.5756453E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 29071.0, "minX": 1000.0, "maxY": 58647.0, "series": [{"data": [[1000.0, 29071.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1000.0, 58647.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1, "maxX": 1000.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 26849.0, "minX": 1000.0, "maxY": 58647.0, "series": [{"data": [[1000.0, 26849.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1000.0, 58647.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1, "maxX": 1000.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.575644841E12, "maxY": 16.0, "series": [{"data": [[1.575644921E12, 1.0], [1.575645347E12, 2.0], [1.575645175E12, 2.0], [1.57564497E12, 1.0], [1.575645183E12, 2.0], [1.575645052E12, 2.0], [1.575645351E12, 3.0], [1.575645294E12, 2.0], [1.575644954E12, 1.0], [1.575644909E12, 2.0], [1.575645122E12, 2.0], [1.575644958E12, 1.0], [1.575645171E12, 1.0], [1.57564513E12, 1.0], [1.575644999E12, 1.0], [1.575645241E12, 1.0], [1.57564511E12, 2.0], [1.575644856E12, 1.0], [1.575645282E12, 1.0], [1.575645118E12, 1.0], [1.575644987E12, 1.0], [1.575645286E12, 1.0], [1.575645245E12, 1.0], [1.575644889E12, 6.0], [1.575645188E12, 3.0], [1.575645274E12, 1.0], [1.575644844E12, 10.0], [1.575645057E12, 1.0], [1.575644971E12, 1.0], [1.575645016E12, 1.0], [1.575645065E12, 1.0], [1.575645024E12, 1.0], [1.575645237E12, 2.0], [1.575645233E12, 1.0], [1.575644934E12, 3.0], [1.575644893E12, 1.0], [1.575645178E12, 3.0], [1.575644875E12, 1.0], [1.57564492E12, 1.0], [1.575644969E12, 1.0], [1.575644842E12, 5.0], [1.575645051E12, 1.0], [1.57564501E12, 1.0], [1.575645166E12, 1.0], [1.575645338E12, 1.0], [1.575645121E12, 1.0], [1.575645293E12, 2.0], [1.575645129E12, 1.0], [1.575645342E12, 1.0], [1.575645297E12, 1.0], [1.575644871E12, 1.0], [1.575645072E12, 2.0], [1.575644986E12, 1.0], [1.575645068E12, 1.0], [1.575644982E12, 1.0], [1.575645289E12, 1.0], [1.57564499E12, 1.0], [1.575645117E12, 2.0], [1.57564506E12, 1.0], [1.575644933E12, 1.0], [1.575645228E12, 2.0], [1.575644843E12, 4.0], [1.575644937E12, 1.0], [1.575645236E12, 2.0], [1.575644851E12, 1.0], [1.575645023E12, 1.0], [1.575644892E12, 4.0], [1.575645019E12, 1.0], [1.575644964E12, 1.0], [1.575645177E12, 2.0], [1.575645345E12, 2.0], [1.575645005E12, 1.0], [1.575644919E12, 4.0], [1.575644841E12, 16.0], [1.575645054E12, 1.0], [1.575645267E12, 1.0], [1.575645013E12, 1.0], [1.575645181E12, 2.0], [1.575645124E12, 1.0], [1.575645296E12, 1.0], [1.575644993E12, 2.0], [1.575645292E12, 2.0], [1.575644907E12, 2.0], [1.575644866E12, 1.0], [1.5756453E12, 1.0], [1.575644915E12, 1.0], [1.57564496E12, 1.0], [1.575644956E12, 1.0], [1.575645169E12, 2.0], [1.57564487E12, 2.0], [1.575645341E12, 1.0], [1.575644985E12, 3.0], [1.575645284E12, 1.0], [1.575644899E12, 1.0], [1.575644944E12, 1.0], [1.575645071E12, 3.0], [1.575645112E12, 1.0], [1.575645325E12, 1.0], [1.575645239E12, 2.0], [1.575644948E12, 1.0], [1.575645075E12, 1.0], [1.575645333E12, 1.0], [1.575645247E12, 2.0], [1.575645116E12, 1.0], [1.575645288E12, 1.0], [1.575645014E12, 2.0], [1.575645186E12, 1.0], [1.575645235E12, 1.0], [1.575644891E12, 4.0], [1.575644936E12, 3.0], [1.575645063E12, 1.0], [1.575645049E12, 1.0], [1.575644922E12, 5.0], [1.575645004E12, 1.0], [1.575644918E12, 1.0], [1.575645131E12, 1.0], [1.575644877E12, 1.0], [1.575645176E12, 1.0], [1.575645012E12, 1.0], [1.575644926E12, 2.0], [1.575644881E12, 1.0], [1.57564518E12, 1.0], [1.575645168E12, 1.0], [1.575645295E12, 2.0], [1.575644865E12, 1.0], [1.575644955E12, 1.0], [1.575645E12, 1.0], [1.575645127E12, 1.0], [1.575645029E12, 1.0], [1.575645242E12, 1.0], [1.575644939E12, 1.0], [1.575645238E12, 1.0], [1.575645111E12, 1.0], [1.575644947E12, 1.0], [1.575645246E12, 1.0], [1.575644992E12, 1.0], [1.575645119E12, 3.0], [1.575644902E12, 1.0], [1.575644861E12, 1.0], [1.575645074E12, 1.0], [1.575645287E12, 1.0], [1.575645017E12, 1.0], [1.57564523E12, 1.0], [1.57564489E12, 5.0], [1.575644972E12, 1.0], [1.575644845E12, 2.0], [1.575645058E12, 2.0], [1.575644894E12, 1.0], [1.575645107E12, 1.0], [1.575645279E12, 1.0], [1.575645062E12, 1.0], [1.575645021E12, 1.0], [1.575644935E12, 1.0], [1.575645234E12, 2.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.575645351E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.575644842E12, "maxY": 10.0, "series": [{"data": [[1.575644921E12, 1.0], [1.575644964E12, 1.0], [1.575645005E12, 1.0], [1.575644919E12, 4.0], [1.575645054E12, 1.0], [1.575645267E12, 1.0], [1.57564497E12, 1.0], [1.575645183E12, 1.0], [1.575644954E12, 1.0], [1.575644993E12, 2.0], [1.575645292E12, 1.0], [1.575644907E12, 2.0], [1.575644909E12, 2.0], [1.575644866E12, 1.0], [1.575645122E12, 1.0], [1.5756453E12, 1.0], [1.575644915E12, 1.0], [1.575644958E12, 1.0], [1.57564496E12, 1.0], [1.57564513E12, 1.0], [1.575644956E12, 1.0], [1.57564487E12, 2.0], [1.575644999E12, 1.0], [1.575644985E12, 1.0], [1.575645284E12, 1.0], [1.575644899E12, 1.0], [1.575644944E12, 1.0], [1.575645071E12, 1.0], [1.575644856E12, 1.0], [1.575645282E12, 1.0], [1.575644948E12, 1.0], [1.575645075E12, 1.0], [1.575645118E12, 1.0], [1.575644987E12, 1.0], [1.575644889E12, 7.0], [1.575645188E12, 1.0], [1.575645274E12, 1.0], [1.575644844E12, 10.0], [1.575645057E12, 1.0], [1.575644971E12, 1.0], [1.575645016E12, 1.0], [1.575645065E12, 1.0], [1.575645024E12, 1.0], [1.575644891E12, 4.0], [1.575644934E12, 3.0], [1.575644893E12, 1.0], [1.575644936E12, 3.0], [1.575644922E12, 5.0], [1.575645178E12, 1.0], [1.575645004E12, 1.0], [1.575644875E12, 1.0], [1.575644918E12, 1.0], [1.575645131E12, 1.0], [1.575644877E12, 1.0], [1.57564492E12, 1.0], [1.575644969E12, 1.0], [1.575645012E12, 1.0], [1.575644926E12, 2.0], [1.575644842E12, 1.0], [1.575644881E12, 1.0], [1.57564501E12, 1.0], [1.575644865E12, 1.0], [1.575644955E12, 1.0], [1.575645E12, 1.0], [1.575644871E12, 1.0], [1.575645029E12, 1.0], [1.575645072E12, 2.0], [1.575644986E12, 1.0], [1.575644939E12, 1.0], [1.575644982E12, 1.0], [1.575645289E12, 1.0], [1.575644947E12, 1.0], [1.57564499E12, 1.0], [1.575644992E12, 1.0], [1.575645119E12, 2.0], [1.575644902E12, 1.0], [1.575644861E12, 1.0], [1.575645074E12, 1.0], [1.57564506E12, 1.0], [1.575644933E12, 1.0], [1.57564489E12, 4.0], [1.575644972E12, 1.0], [1.575644843E12, 4.0], [1.575644845E12, 2.0], [1.575644937E12, 1.0], [1.575644851E12, 1.0], [1.575644894E12, 1.0], [1.575645279E12, 1.0], [1.575644892E12, 4.0], [1.575645021E12, 1.0], [1.575644935E12, 1.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.575645177E12, 2.0], [1.575645347E12, 2.0], [1.575645392E12, 1.0], [1.575645345E12, 2.0], [1.575645175E12, 2.0], [1.575645353E12, 2.0], [1.575645396E12, 1.0], [1.575645013E12, 1.0], [1.575645183E12, 1.0], [1.575645052E12, 2.0], [1.575645181E12, 2.0], [1.575645351E12, 4.0], [1.575645124E12, 1.0], [1.575645294E12, 2.0], [1.575645296E12, 1.0], [1.575645292E12, 1.0], [1.575645122E12, 1.0], [1.575645171E12, 1.0], [1.575645169E12, 2.0], [1.575645341E12, 1.0], [1.575645384E12, 1.0], [1.575644985E12, 2.0], [1.575645241E12, 1.0], [1.575645071E12, 2.0], [1.575645409E12, 2.0], [1.57564511E12, 2.0], [1.575645112E12, 1.0], [1.575645325E12, 1.0], [1.575645239E12, 2.0], [1.575645118E12, 1.0], [1.575645333E12, 1.0], [1.575645247E12, 2.0], [1.575645116E12, 1.0], [1.575645286E12, 1.0], [1.575645288E12, 1.0], [1.575645188E12, 2.0], [1.575645401E12, 1.0], [1.575645356E12, 1.0], [1.575645014E12, 2.0], [1.575645186E12, 1.0], [1.575645399E12, 1.0], [1.575645235E12, 1.0], [1.575645237E12, 2.0], [1.575645233E12, 1.0], [1.575645063E12, 1.0], [1.575645049E12, 1.0], [1.575645178E12, 2.0], [1.575645176E12, 1.0], [1.575645354E12, 3.0], [1.57564518E12, 1.0], [1.575645051E12, 1.0], [1.575645166E12, 1.0], [1.575645168E12, 1.0], [1.575645295E12, 2.0], [1.575645338E12, 1.0], [1.575645121E12, 1.0], [1.575645293E12, 2.0], [1.575645129E12, 1.0], [1.575645342E12, 1.0], [1.575645297E12, 1.0], [1.575645127E12, 1.0], [1.575645242E12, 1.0], [1.575645068E12, 1.0], [1.575645238E12, 1.0], [1.575645111E12, 1.0], [1.57564541E12, 1.0], [1.575645246E12, 1.0], [1.575645244E12, 1.0], [1.575645117E12, 2.0], [1.575645287E12, 1.0], [1.575645017E12, 1.0], [1.57564523E12, 1.0], [1.575645359E12, 1.0], [1.575645228E12, 2.0], [1.575645058E12, 2.0], [1.575645236E12, 2.0], [1.575645107E12, 1.0], [1.575645406E12, 2.0], [1.575645023E12, 1.0], [1.575645404E12, 2.0], [1.575645019E12, 1.0], [1.575645062E12, 1.0], [1.575645234E12, 2.0]], "isOverall": false, "label": "404", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1.57564541E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.575644842E12, "maxY": 10.0, "series": [{"data": [[1.575644921E12, 1.0], [1.575644964E12, 1.0], [1.575645005E12, 1.0], [1.575644919E12, 4.0], [1.575645054E12, 1.0], [1.575645267E12, 1.0], [1.57564497E12, 1.0], [1.575645183E12, 1.0], [1.575644954E12, 1.0], [1.575644993E12, 2.0], [1.575645292E12, 1.0], [1.575644907E12, 2.0], [1.575644909E12, 2.0], [1.575644866E12, 1.0], [1.575645122E12, 1.0], [1.5756453E12, 1.0], [1.575644915E12, 1.0], [1.575644958E12, 1.0], [1.57564496E12, 1.0], [1.57564513E12, 1.0], [1.575644956E12, 1.0], [1.57564487E12, 2.0], [1.575644999E12, 1.0], [1.575644985E12, 1.0], [1.575645284E12, 1.0], [1.575644899E12, 1.0], [1.575644944E12, 1.0], [1.575645071E12, 1.0], [1.575644856E12, 1.0], [1.575645282E12, 1.0], [1.575644948E12, 1.0], [1.575645075E12, 1.0], [1.575645118E12, 1.0], [1.575644987E12, 1.0], [1.575644889E12, 7.0], [1.575645188E12, 1.0], [1.575645274E12, 1.0], [1.575644844E12, 10.0], [1.575645057E12, 1.0], [1.575644971E12, 1.0], [1.575645016E12, 1.0], [1.575645065E12, 1.0], [1.575645024E12, 1.0], [1.575644891E12, 4.0], [1.575644934E12, 3.0], [1.575644893E12, 1.0], [1.575644936E12, 3.0], [1.575644922E12, 5.0], [1.575645178E12, 1.0], [1.575645004E12, 1.0], [1.575644875E12, 1.0], [1.575644918E12, 1.0], [1.575645131E12, 1.0], [1.575644877E12, 1.0], [1.57564492E12, 1.0], [1.575644969E12, 1.0], [1.575645012E12, 1.0], [1.575644926E12, 2.0], [1.575644842E12, 1.0], [1.575644881E12, 1.0], [1.57564501E12, 1.0], [1.575644865E12, 1.0], [1.575644955E12, 1.0], [1.575645E12, 1.0], [1.575644871E12, 1.0], [1.575645029E12, 1.0], [1.575645072E12, 2.0], [1.575644986E12, 1.0], [1.575644939E12, 1.0], [1.575644982E12, 1.0], [1.575645289E12, 1.0], [1.575644947E12, 1.0], [1.57564499E12, 1.0], [1.575644992E12, 1.0], [1.575645119E12, 2.0], [1.575644902E12, 1.0], [1.575644861E12, 1.0], [1.575645074E12, 1.0], [1.57564506E12, 1.0], [1.575644933E12, 1.0], [1.57564489E12, 4.0], [1.575644972E12, 1.0], [1.575644843E12, 4.0], [1.575644845E12, 2.0], [1.575644937E12, 1.0], [1.575644851E12, 1.0], [1.575644894E12, 1.0], [1.575645279E12, 1.0], [1.575644892E12, 4.0], [1.575645021E12, 1.0], [1.575644935E12, 1.0]], "isOverall": false, "label": "CreateYMR-success", "isController": false}, {"data": [[1.575645177E12, 2.0], [1.575645347E12, 2.0], [1.575645392E12, 1.0], [1.575645345E12, 2.0], [1.575645175E12, 2.0], [1.575645353E12, 2.0], [1.575645396E12, 1.0], [1.575645013E12, 1.0], [1.575645183E12, 1.0], [1.575645052E12, 2.0], [1.575645181E12, 2.0], [1.575645351E12, 4.0], [1.575645124E12, 1.0], [1.575645294E12, 2.0], [1.575645296E12, 1.0], [1.575645292E12, 1.0], [1.575645122E12, 1.0], [1.575645171E12, 1.0], [1.575645169E12, 2.0], [1.575645341E12, 1.0], [1.575645384E12, 1.0], [1.575644985E12, 2.0], [1.575645241E12, 1.0], [1.575645071E12, 2.0], [1.575645409E12, 2.0], [1.57564511E12, 2.0], [1.575645112E12, 1.0], [1.575645325E12, 1.0], [1.575645239E12, 2.0], [1.575645118E12, 1.0], [1.575645333E12, 1.0], [1.575645247E12, 2.0], [1.575645116E12, 1.0], [1.575645286E12, 1.0], [1.575645288E12, 1.0], [1.575645188E12, 2.0], [1.575645401E12, 1.0], [1.575645356E12, 1.0], [1.575645014E12, 2.0], [1.575645186E12, 1.0], [1.575645399E12, 1.0], [1.575645235E12, 1.0], [1.575645237E12, 2.0], [1.575645233E12, 1.0], [1.575645063E12, 1.0], [1.575645049E12, 1.0], [1.575645178E12, 2.0], [1.575645176E12, 1.0], [1.575645354E12, 3.0], [1.57564518E12, 1.0], [1.575645051E12, 1.0], [1.575645166E12, 1.0], [1.575645168E12, 1.0], [1.575645295E12, 2.0], [1.575645338E12, 1.0], [1.575645121E12, 1.0], [1.575645293E12, 2.0], [1.575645129E12, 1.0], [1.575645342E12, 1.0], [1.575645297E12, 1.0], [1.575645127E12, 1.0], [1.575645242E12, 1.0], [1.575645068E12, 1.0], [1.575645238E12, 1.0], [1.575645111E12, 1.0], [1.57564541E12, 1.0], [1.575645246E12, 1.0], [1.575645244E12, 1.0], [1.575645117E12, 2.0], [1.575645287E12, 1.0], [1.575645017E12, 1.0], [1.57564523E12, 1.0], [1.575645359E12, 1.0], [1.575645228E12, 2.0], [1.575645058E12, 2.0], [1.575645236E12, 2.0], [1.575645107E12, 1.0], [1.575645406E12, 2.0], [1.575645023E12, 1.0], [1.575645404E12, 2.0], [1.575645019E12, 1.0], [1.575645062E12, 1.0], [1.575645234E12, 2.0]], "isOverall": false, "label": "CreateYMR-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.57564541E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.575644842E12, "maxY": 10.0, "series": [{"data": [[1.575644921E12, 1.0], [1.575644964E12, 1.0], [1.575645005E12, 1.0], [1.575644919E12, 4.0], [1.575645054E12, 1.0], [1.575645267E12, 1.0], [1.57564497E12, 1.0], [1.575645183E12, 1.0], [1.575644954E12, 1.0], [1.575644993E12, 2.0], [1.575645292E12, 1.0], [1.575644907E12, 2.0], [1.575644909E12, 2.0], [1.575644866E12, 1.0], [1.575645122E12, 1.0], [1.5756453E12, 1.0], [1.575644915E12, 1.0], [1.575644958E12, 1.0], [1.57564496E12, 1.0], [1.57564513E12, 1.0], [1.575644956E12, 1.0], [1.57564487E12, 2.0], [1.575644999E12, 1.0], [1.575644985E12, 1.0], [1.575645284E12, 1.0], [1.575644899E12, 1.0], [1.575644944E12, 1.0], [1.575645071E12, 1.0], [1.575644856E12, 1.0], [1.575645282E12, 1.0], [1.575644948E12, 1.0], [1.575645075E12, 1.0], [1.575645118E12, 1.0], [1.575644987E12, 1.0], [1.575644889E12, 7.0], [1.575645188E12, 1.0], [1.575645274E12, 1.0], [1.575644844E12, 10.0], [1.575645057E12, 1.0], [1.575644971E12, 1.0], [1.575645016E12, 1.0], [1.575645065E12, 1.0], [1.575645024E12, 1.0], [1.575644891E12, 4.0], [1.575644934E12, 3.0], [1.575644893E12, 1.0], [1.575644936E12, 3.0], [1.575644922E12, 5.0], [1.575645178E12, 1.0], [1.575645004E12, 1.0], [1.575644875E12, 1.0], [1.575644918E12, 1.0], [1.575645131E12, 1.0], [1.575644877E12, 1.0], [1.57564492E12, 1.0], [1.575644969E12, 1.0], [1.575645012E12, 1.0], [1.575644926E12, 2.0], [1.575644842E12, 1.0], [1.575644881E12, 1.0], [1.57564501E12, 1.0], [1.575644865E12, 1.0], [1.575644955E12, 1.0], [1.575645E12, 1.0], [1.575644871E12, 1.0], [1.575645029E12, 1.0], [1.575645072E12, 2.0], [1.575644986E12, 1.0], [1.575644939E12, 1.0], [1.575644982E12, 1.0], [1.575645289E12, 1.0], [1.575644947E12, 1.0], [1.57564499E12, 1.0], [1.575644992E12, 1.0], [1.575645119E12, 2.0], [1.575644902E12, 1.0], [1.575644861E12, 1.0], [1.575645074E12, 1.0], [1.57564506E12, 1.0], [1.575644933E12, 1.0], [1.57564489E12, 4.0], [1.575644972E12, 1.0], [1.575644843E12, 4.0], [1.575644845E12, 2.0], [1.575644937E12, 1.0], [1.575644851E12, 1.0], [1.575644894E12, 1.0], [1.575645279E12, 1.0], [1.575644892E12, 4.0], [1.575645021E12, 1.0], [1.575644935E12, 1.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.575645177E12, 2.0], [1.575645347E12, 2.0], [1.575645392E12, 1.0], [1.575645345E12, 2.0], [1.575645175E12, 2.0], [1.575645353E12, 2.0], [1.575645396E12, 1.0], [1.575645013E12, 1.0], [1.575645183E12, 1.0], [1.575645052E12, 2.0], [1.575645181E12, 2.0], [1.575645351E12, 4.0], [1.575645124E12, 1.0], [1.575645294E12, 2.0], [1.575645296E12, 1.0], [1.575645292E12, 1.0], [1.575645122E12, 1.0], [1.575645171E12, 1.0], [1.575645169E12, 2.0], [1.575645341E12, 1.0], [1.575645384E12, 1.0], [1.575644985E12, 2.0], [1.575645241E12, 1.0], [1.575645071E12, 2.0], [1.575645409E12, 2.0], [1.57564511E12, 2.0], [1.575645112E12, 1.0], [1.575645325E12, 1.0], [1.575645239E12, 2.0], [1.575645118E12, 1.0], [1.575645333E12, 1.0], [1.575645247E12, 2.0], [1.575645116E12, 1.0], [1.575645286E12, 1.0], [1.575645288E12, 1.0], [1.575645188E12, 2.0], [1.575645401E12, 1.0], [1.575645356E12, 1.0], [1.575645014E12, 2.0], [1.575645186E12, 1.0], [1.575645399E12, 1.0], [1.575645235E12, 1.0], [1.575645237E12, 2.0], [1.575645233E12, 1.0], [1.575645063E12, 1.0], [1.575645049E12, 1.0], [1.575645178E12, 2.0], [1.575645176E12, 1.0], [1.575645354E12, 3.0], [1.57564518E12, 1.0], [1.575645051E12, 1.0], [1.575645166E12, 1.0], [1.575645168E12, 1.0], [1.575645295E12, 2.0], [1.575645338E12, 1.0], [1.575645121E12, 1.0], [1.575645293E12, 2.0], [1.575645129E12, 1.0], [1.575645342E12, 1.0], [1.575645297E12, 1.0], [1.575645127E12, 1.0], [1.575645242E12, 1.0], [1.575645068E12, 1.0], [1.575645238E12, 1.0], [1.575645111E12, 1.0], [1.57564541E12, 1.0], [1.575645246E12, 1.0], [1.575645244E12, 1.0], [1.575645117E12, 2.0], [1.575645287E12, 1.0], [1.575645017E12, 1.0], [1.57564523E12, 1.0], [1.575645359E12, 1.0], [1.575645228E12, 2.0], [1.575645058E12, 2.0], [1.575645236E12, 2.0], [1.575645107E12, 1.0], [1.575645406E12, 2.0], [1.575645023E12, 1.0], [1.575645404E12, 2.0], [1.575645019E12, 1.0], [1.575645062E12, 1.0], [1.575645234E12, 2.0]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 1000, "maxX": 1.57564541E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

